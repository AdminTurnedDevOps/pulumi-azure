// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class NetworkSecurityGroup extends lumi.NamedResource implements NetworkSecurityGroupArgs {
    public readonly location: string;
    public readonly networkSecurityGroupName?: string;
    public readonly resourceGroupName: string;
    public readonly securityRule: { access: string, description?: string, destinationAddressPrefix: string, destinationPortRange: string, direction: string, name: string, priority: number, protocol: string, sourceAddressPrefix: string, sourcePortRange: string }[];
    public readonly tags: {[key: string]: any};

    constructor(name: string, args: NetworkSecurityGroupArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.location, "") === undefined) {
            throw new Error("Property argument 'location' is required, but was missing");
        }
        this.location = args.location;
        this.networkSecurityGroupName = args.networkSecurityGroupName;
        if (lumirt.defaultIfComputed(args.resourceGroupName, "") === undefined) {
            throw new Error("Property argument 'resourceGroupName' is required, but was missing");
        }
        this.resourceGroupName = args.resourceGroupName;
        this.securityRule = args.securityRule;
        this.tags = args.tags;
    }
}

export interface NetworkSecurityGroupArgs {
    readonly location: string;
    readonly networkSecurityGroupName?: string;
    readonly resourceGroupName: string;
    readonly securityRule?: { access: string, description?: string, destinationAddressPrefix: string, destinationPortRange: string, direction: string, name: string, priority: number, protocol: string, sourceAddressPrefix: string, sourcePortRange: string }[];
    readonly tags?: {[key: string]: any};
}

