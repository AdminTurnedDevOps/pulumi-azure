// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class Route extends lumi.NamedResource implements RouteArgs {
    public readonly addressPrefix: string;
    public readonly routeName?: string;
    public readonly nextHopInIpAddress: string;
    public readonly nextHopType: string;
    public readonly resourceGroupName: string;
    public readonly routeTableName: string;

    constructor(name: string, args: RouteArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.addressPrefix, "") === undefined) {
            throw new Error("Property argument 'addressPrefix' is required, but was missing");
        }
        this.addressPrefix = args.addressPrefix;
        this.routeName = args.routeName;
        this.nextHopInIpAddress = args.nextHopInIpAddress;
        if (lumirt.defaultIfComputed(args.nextHopType, "") === undefined) {
            throw new Error("Property argument 'nextHopType' is required, but was missing");
        }
        this.nextHopType = args.nextHopType;
        if (lumirt.defaultIfComputed(args.resourceGroupName, "") === undefined) {
            throw new Error("Property argument 'resourceGroupName' is required, but was missing");
        }
        this.resourceGroupName = args.resourceGroupName;
        if (lumirt.defaultIfComputed(args.routeTableName, "") === undefined) {
            throw new Error("Property argument 'routeTableName' is required, but was missing");
        }
        this.routeTableName = args.routeTableName;
    }
}

export interface RouteArgs {
    readonly addressPrefix: string;
    readonly routeName?: string;
    readonly nextHopInIpAddress?: string;
    readonly nextHopType: string;
    readonly resourceGroupName: string;
    readonly routeTableName: string;
}

