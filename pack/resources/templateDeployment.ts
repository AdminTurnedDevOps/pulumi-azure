// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class TemplateDeployment extends lumi.NamedResource implements TemplateDeploymentArgs {
    public readonly deploymentMode: string;
    public readonly templateDeploymentName?: string;
    public /*out*/ readonly outputs: {[key: string]: any};
    public readonly parameters?: {[key: string]: any};
    public readonly resourceGroupName: string;
    public readonly templateBody: string;

    constructor(name: string, args: TemplateDeploymentArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.deploymentMode, "") === undefined) {
            throw new Error("Property argument 'deploymentMode' is required, but was missing");
        }
        this.deploymentMode = args.deploymentMode;
        this.templateDeploymentName = args.templateDeploymentName;
        this.parameters = args.parameters;
        if (lumirt.defaultIfComputed(args.resourceGroupName, "") === undefined) {
            throw new Error("Property argument 'resourceGroupName' is required, but was missing");
        }
        this.resourceGroupName = args.resourceGroupName;
        this.templateBody = args.templateBody;
    }
}

export interface TemplateDeploymentArgs {
    readonly deploymentMode: string;
    readonly templateDeploymentName?: string;
    readonly parameters?: {[key: string]: any};
    readonly resourceGroupName: string;
    readonly templateBody?: string;
}

