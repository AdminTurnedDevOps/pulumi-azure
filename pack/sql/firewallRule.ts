// *** WARNING: this file was generated by the Lumi Terraform Bridge (TFGEN) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as lumi from "@lumi/lumi";
import * as lumirt from "@lumi/lumirt";

export class FirewallRule extends lumi.NamedResource implements FirewallRuleArgs {
    public readonly endIpAddress: string;
    public readonly firewallRuleName?: string;
    public readonly resourceGroupName: string;
    public readonly serverName: string;
    public readonly startIpAddress: string;

    constructor(name: string, args: FirewallRuleArgs) {
        super(name);
        if (lumirt.defaultIfComputed(args.endIpAddress, "") === undefined) {
            throw new Error("Property argument 'endIpAddress' is required, but was missing");
        }
        this.endIpAddress = args.endIpAddress;
        this.firewallRuleName = args.firewallRuleName;
        if (lumirt.defaultIfComputed(args.resourceGroupName, "") === undefined) {
            throw new Error("Property argument 'resourceGroupName' is required, but was missing");
        }
        this.resourceGroupName = args.resourceGroupName;
        if (lumirt.defaultIfComputed(args.serverName, "") === undefined) {
            throw new Error("Property argument 'serverName' is required, but was missing");
        }
        this.serverName = args.serverName;
        if (lumirt.defaultIfComputed(args.startIpAddress, "") === undefined) {
            throw new Error("Property argument 'startIpAddress' is required, but was missing");
        }
        this.startIpAddress = args.startIpAddress;
    }
}

export interface FirewallRuleArgs {
    readonly endIpAddress: string;
    readonly firewallRuleName?: string;
    readonly resourceGroupName: string;
    readonly serverName: string;
    readonly startIpAddress: string;
}

