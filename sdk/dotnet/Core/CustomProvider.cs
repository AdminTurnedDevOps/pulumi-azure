// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.Core
{
    /// <summary>
    /// Manages an Azure Custom Provider.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/custom_provider.html.markdown.
    /// </summary>
    public partial class CustomProvider : Pulumi.CustomResource
    {
        /// <summary>
        /// Any number of `action` block as defined below. One of `resource_type` or `action` must be specified.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.CustomProviderActions>> Actions { get; private set; } = null!;

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the resource group in which to create the Custom Provider.
        /// </summary>
        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        /// <summary>
        /// Any number of `resource_type` block as defined below. One of `resource_type` or `action` must be specified.
        /// </summary>
        [Output("resourceTypes")]
        public Output<ImmutableArray<Outputs.CustomProviderResourceTypes>> ResourceTypes { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Any number of `validation` block as defined below.
        /// </summary>
        [Output("validations")]
        public Output<ImmutableArray<Outputs.CustomProviderValidations>> Validations { get; private set; } = null!;


        /// <summary>
        /// Create a CustomProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomProvider(string name, CustomProviderArgs args, CustomResourceOptions? options = null)
            : base("azure:core/customProvider:CustomProvider", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private CustomProvider(string name, Input<string> id, CustomProviderState? state = null, CustomResourceOptions? options = null)
            : base("azure:core/customProvider:CustomProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomProvider Get(string name, Input<string> id, CustomProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomProvider(name, id, state, options);
        }
    }

    public sealed class CustomProviderArgs : Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.CustomProviderActionsArgs>? _actions;

        /// <summary>
        /// Any number of `action` block as defined below. One of `resource_type` or `action` must be specified.
        /// </summary>
        public InputList<Inputs.CustomProviderActionsArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.CustomProviderActionsArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Custom Provider.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("resourceTypes")]
        private InputList<Inputs.CustomProviderResourceTypesArgs>? _resourceTypes;

        /// <summary>
        /// Any number of `resource_type` block as defined below. One of `resource_type` or `action` must be specified.
        /// </summary>
        public InputList<Inputs.CustomProviderResourceTypesArgs> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<Inputs.CustomProviderResourceTypesArgs>());
            set => _resourceTypes = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("validations")]
        private InputList<Inputs.CustomProviderValidationsArgs>? _validations;

        /// <summary>
        /// Any number of `validation` block as defined below.
        /// </summary>
        public InputList<Inputs.CustomProviderValidationsArgs> Validations
        {
            get => _validations ?? (_validations = new InputList<Inputs.CustomProviderValidationsArgs>());
            set => _validations = value;
        }

        public CustomProviderArgs()
        {
        }
    }

    public sealed class CustomProviderState : Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.CustomProviderActionsGetArgs>? _actions;

        /// <summary>
        /// Any number of `action` block as defined below. One of `resource_type` or `action` must be specified.
        /// </summary>
        public InputList<Inputs.CustomProviderActionsGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.CustomProviderActionsGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the name of the Custom Provider. Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the resource group in which to create the Custom Provider.
        /// </summary>
        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("resourceTypes")]
        private InputList<Inputs.CustomProviderResourceTypesGetArgs>? _resourceTypes;

        /// <summary>
        /// Any number of `resource_type` block as defined below. One of `resource_type` or `action` must be specified.
        /// </summary>
        public InputList<Inputs.CustomProviderResourceTypesGetArgs> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<Inputs.CustomProviderResourceTypesGetArgs>());
            set => _resourceTypes = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("validations")]
        private InputList<Inputs.CustomProviderValidationsGetArgs>? _validations;

        /// <summary>
        /// Any number of `validation` block as defined below.
        /// </summary>
        public InputList<Inputs.CustomProviderValidationsGetArgs> Validations
        {
            get => _validations ?? (_validations = new InputList<Inputs.CustomProviderValidationsGetArgs>());
            set => _validations = value;
        }

        public CustomProviderState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class CustomProviderActionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the endpoint of the action. 
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the action. 
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public CustomProviderActionsArgs()
        {
        }
    }

    public sealed class CustomProviderActionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the endpoint of the action. 
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the action. 
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public CustomProviderActionsGetArgs()
        {
        }
    }

    public sealed class CustomProviderResourceTypesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the endpoint of the route definition. 
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the route definition. 
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The routing type that is supported for the resource request. Valid values are `ResourceTypeRoutingProxy` or `ResourceTypeRoutingProxyCache`. This value defaults to `ResourceTypeRoutingProxy`. 
        /// </summary>
        [Input("routingType")]
        public Input<string>? RoutingType { get; set; }

        public CustomProviderResourceTypesArgs()
        {
        }
    }

    public sealed class CustomProviderResourceTypesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the endpoint of the route definition. 
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the route definition. 
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The routing type that is supported for the resource request. Valid values are `ResourceTypeRoutingProxy` or `ResourceTypeRoutingProxyCache`. This value defaults to `ResourceTypeRoutingProxy`. 
        /// </summary>
        [Input("routingType")]
        public Input<string>? RoutingType { get; set; }

        public CustomProviderResourceTypesGetArgs()
        {
        }
    }

    public sealed class CustomProviderValidationsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The endpoint where the validation specification is located. 
        /// </summary>
        [Input("specification", required: true)]
        public Input<string> Specification { get; set; } = null!;

        public CustomProviderValidationsArgs()
        {
        }
    }

    public sealed class CustomProviderValidationsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The endpoint where the validation specification is located. 
        /// </summary>
        [Input("specification", required: true)]
        public Input<string> Specification { get; set; } = null!;

        public CustomProviderValidationsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class CustomProviderActions
    {
        /// <summary>
        /// Specifies the endpoint of the action. 
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// Specifies the name of the action. 
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private CustomProviderActions(
            string endpoint,
            string name)
        {
            Endpoint = endpoint;
            Name = name;
        }
    }

    [OutputType]
    public sealed class CustomProviderResourceTypes
    {
        /// <summary>
        /// Specifies the endpoint of the route definition. 
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// Specifies the name of the route definition. 
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The routing type that is supported for the resource request. Valid values are `ResourceTypeRoutingProxy` or `ResourceTypeRoutingProxyCache`. This value defaults to `ResourceTypeRoutingProxy`. 
        /// </summary>
        public readonly string? RoutingType;

        [OutputConstructor]
        private CustomProviderResourceTypes(
            string endpoint,
            string name,
            string? routingType)
        {
            Endpoint = endpoint;
            Name = name;
            RoutingType = routingType;
        }
    }

    [OutputType]
    public sealed class CustomProviderValidations
    {
        /// <summary>
        /// The endpoint where the validation specification is located. 
        /// </summary>
        public readonly string Specification;

        [OutputConstructor]
        private CustomProviderValidations(string specification)
        {
            Specification = specification;
        }
    }
    }
}
