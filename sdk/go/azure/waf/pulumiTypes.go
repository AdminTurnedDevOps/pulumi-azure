// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type PolicyCustomRule struct {
	Action          string                           `pulumi:"action"`
	MatchConditions []PolicyCustomRuleMatchCondition `pulumi:"matchConditions"`
	// The name of the policy. Changing this forces a new resource to be created.
	Name     *string `pulumi:"name"`
	Priority int     `pulumi:"priority"`
	RuleType string  `pulumi:"ruleType"`
}

type PolicyCustomRuleInput interface {
	pulumi.Input

	ToPolicyCustomRuleOutput() PolicyCustomRuleOutput
	ToPolicyCustomRuleOutputWithContext(context.Context) PolicyCustomRuleOutput
}

type PolicyCustomRuleArgs struct {
	Action          pulumi.StringInput                       `pulumi:"action"`
	MatchConditions PolicyCustomRuleMatchConditionArrayInput `pulumi:"matchConditions"`
	// The name of the policy. Changing this forces a new resource to be created.
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Priority pulumi.IntInput       `pulumi:"priority"`
	RuleType pulumi.StringInput    `pulumi:"ruleType"`
}

func (PolicyCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRule)(nil)).Elem()
}

func (i PolicyCustomRuleArgs) ToPolicyCustomRuleOutput() PolicyCustomRuleOutput {
	return i.ToPolicyCustomRuleOutputWithContext(context.Background())
}

func (i PolicyCustomRuleArgs) ToPolicyCustomRuleOutputWithContext(ctx context.Context) PolicyCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleOutput)
}

type PolicyCustomRuleArrayInput interface {
	pulumi.Input

	ToPolicyCustomRuleArrayOutput() PolicyCustomRuleArrayOutput
	ToPolicyCustomRuleArrayOutputWithContext(context.Context) PolicyCustomRuleArrayOutput
}

type PolicyCustomRuleArray []PolicyCustomRuleInput

func (PolicyCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRule)(nil)).Elem()
}

func (i PolicyCustomRuleArray) ToPolicyCustomRuleArrayOutput() PolicyCustomRuleArrayOutput {
	return i.ToPolicyCustomRuleArrayOutputWithContext(context.Background())
}

func (i PolicyCustomRuleArray) ToPolicyCustomRuleArrayOutputWithContext(ctx context.Context) PolicyCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleArrayOutput)
}

type PolicyCustomRuleOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRule)(nil)).Elem()
}

func (o PolicyCustomRuleOutput) ToPolicyCustomRuleOutput() PolicyCustomRuleOutput {
	return o
}

func (o PolicyCustomRuleOutput) ToPolicyCustomRuleOutputWithContext(ctx context.Context) PolicyCustomRuleOutput {
	return o
}

func (o PolicyCustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o PolicyCustomRuleOutput) MatchConditions() PolicyCustomRuleMatchConditionArrayOutput {
	return o.ApplyT(func(v PolicyCustomRule) []PolicyCustomRuleMatchCondition { return v.MatchConditions }).(PolicyCustomRuleMatchConditionArrayOutput)
}

// The name of the policy. Changing this forces a new resource to be created.
func (o PolicyCustomRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyCustomRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PolicyCustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyCustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

func (o PolicyCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type PolicyCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRule)(nil)).Elem()
}

func (o PolicyCustomRuleArrayOutput) ToPolicyCustomRuleArrayOutput() PolicyCustomRuleArrayOutput {
	return o
}

func (o PolicyCustomRuleArrayOutput) ToPolicyCustomRuleArrayOutputWithContext(ctx context.Context) PolicyCustomRuleArrayOutput {
	return o
}

func (o PolicyCustomRuleArrayOutput) Index(i pulumi.IntInput) PolicyCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyCustomRule {
		return vs[0].([]PolicyCustomRule)[vs[1].(int)]
	}).(PolicyCustomRuleOutput)
}

type PolicyCustomRuleMatchCondition struct {
	MatchValues       []string                                      `pulumi:"matchValues"`
	MatchVariables    []PolicyCustomRuleMatchConditionMatchVariable `pulumi:"matchVariables"`
	NegationCondition *bool                                         `pulumi:"negationCondition"`
	Operator          string                                        `pulumi:"operator"`
}

type PolicyCustomRuleMatchConditionInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionOutput() PolicyCustomRuleMatchConditionOutput
	ToPolicyCustomRuleMatchConditionOutputWithContext(context.Context) PolicyCustomRuleMatchConditionOutput
}

type PolicyCustomRuleMatchConditionArgs struct {
	MatchValues       pulumi.StringArrayInput                               `pulumi:"matchValues"`
	MatchVariables    PolicyCustomRuleMatchConditionMatchVariableArrayInput `pulumi:"matchVariables"`
	NegationCondition pulumi.BoolPtrInput                                   `pulumi:"negationCondition"`
	Operator          pulumi.StringInput                                    `pulumi:"operator"`
}

func (PolicyCustomRuleMatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionArgs) ToPolicyCustomRuleMatchConditionOutput() PolicyCustomRuleMatchConditionOutput {
	return i.ToPolicyCustomRuleMatchConditionOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionArgs) ToPolicyCustomRuleMatchConditionOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionOutput)
}

type PolicyCustomRuleMatchConditionArrayInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionArrayOutput() PolicyCustomRuleMatchConditionArrayOutput
	ToPolicyCustomRuleMatchConditionArrayOutputWithContext(context.Context) PolicyCustomRuleMatchConditionArrayOutput
}

type PolicyCustomRuleMatchConditionArray []PolicyCustomRuleMatchConditionInput

func (PolicyCustomRuleMatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionArray) ToPolicyCustomRuleMatchConditionArrayOutput() PolicyCustomRuleMatchConditionArrayOutput {
	return i.ToPolicyCustomRuleMatchConditionArrayOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionArray) ToPolicyCustomRuleMatchConditionArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionArrayOutput)
}

type PolicyCustomRuleMatchConditionOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionOutput) ToPolicyCustomRuleMatchConditionOutput() PolicyCustomRuleMatchConditionOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionOutput) ToPolicyCustomRuleMatchConditionOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

func (o PolicyCustomRuleMatchConditionOutput) MatchVariables() PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) []PolicyCustomRuleMatchConditionMatchVariable {
		return v.MatchVariables
	}).(PolicyCustomRuleMatchConditionMatchVariableArrayOutput)
}

func (o PolicyCustomRuleMatchConditionOutput) NegationCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) *bool { return v.NegationCondition }).(pulumi.BoolPtrOutput)
}

func (o PolicyCustomRuleMatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type PolicyCustomRuleMatchConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionArrayOutput) ToPolicyCustomRuleMatchConditionArrayOutput() PolicyCustomRuleMatchConditionArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionArrayOutput) ToPolicyCustomRuleMatchConditionArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionArrayOutput) Index(i pulumi.IntInput) PolicyCustomRuleMatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyCustomRuleMatchCondition {
		return vs[0].([]PolicyCustomRuleMatchCondition)[vs[1].(int)]
	}).(PolicyCustomRuleMatchConditionOutput)
}

type PolicyCustomRuleMatchConditionMatchVariable struct {
	Selector     *string `pulumi:"selector"`
	VariableName string  `pulumi:"variableName"`
}

type PolicyCustomRuleMatchConditionMatchVariableInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionMatchVariableOutput() PolicyCustomRuleMatchConditionMatchVariableOutput
	ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(context.Context) PolicyCustomRuleMatchConditionMatchVariableOutput
}

type PolicyCustomRuleMatchConditionMatchVariableArgs struct {
	Selector     pulumi.StringPtrInput `pulumi:"selector"`
	VariableName pulumi.StringInput    `pulumi:"variableName"`
}

func (PolicyCustomRuleMatchConditionMatchVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionMatchVariableArgs) ToPolicyCustomRuleMatchConditionMatchVariableOutput() PolicyCustomRuleMatchConditionMatchVariableOutput {
	return i.ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionMatchVariableArgs) ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionMatchVariableOutput)
}

type PolicyCustomRuleMatchConditionMatchVariableArrayInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionMatchVariableArrayOutput() PolicyCustomRuleMatchConditionMatchVariableArrayOutput
	ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(context.Context) PolicyCustomRuleMatchConditionMatchVariableArrayOutput
}

type PolicyCustomRuleMatchConditionMatchVariableArray []PolicyCustomRuleMatchConditionMatchVariableInput

func (PolicyCustomRuleMatchConditionMatchVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionMatchVariableArray) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutput() PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return i.ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionMatchVariableArray) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionMatchVariableArrayOutput)
}

type PolicyCustomRuleMatchConditionMatchVariableOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionMatchVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionMatchVariableOutput) ToPolicyCustomRuleMatchConditionMatchVariableOutput() PolicyCustomRuleMatchConditionMatchVariableOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionMatchVariableOutput) ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionMatchVariableOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchConditionMatchVariable) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

func (o PolicyCustomRuleMatchConditionMatchVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchConditionMatchVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type PolicyCustomRuleMatchConditionMatchVariableArrayOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionMatchVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionMatchVariableArrayOutput) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutput() PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionMatchVariableArrayOutput) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionMatchVariableArrayOutput) Index(i pulumi.IntInput) PolicyCustomRuleMatchConditionMatchVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyCustomRuleMatchConditionMatchVariable {
		return vs[0].([]PolicyCustomRuleMatchConditionMatchVariable)[vs[1].(int)]
	}).(PolicyCustomRuleMatchConditionMatchVariableOutput)
}

type PolicyPolicySettings struct {
	Enabled *bool   `pulumi:"enabled"`
	Mode    *string `pulumi:"mode"`
}

type PolicyPolicySettingsInput interface {
	pulumi.Input

	ToPolicyPolicySettingsOutput() PolicyPolicySettingsOutput
	ToPolicyPolicySettingsOutputWithContext(context.Context) PolicyPolicySettingsOutput
}

type PolicyPolicySettingsArgs struct {
	Enabled pulumi.BoolPtrInput   `pulumi:"enabled"`
	Mode    pulumi.StringPtrInput `pulumi:"mode"`
}

func (PolicyPolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPolicySettings)(nil)).Elem()
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsOutput() PolicyPolicySettingsOutput {
	return i.ToPolicyPolicySettingsOutputWithContext(context.Background())
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsOutputWithContext(ctx context.Context) PolicyPolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicySettingsOutput)
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return i.ToPolicyPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicySettingsOutput).ToPolicyPolicySettingsPtrOutputWithContext(ctx)
}

type PolicyPolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput
	ToPolicyPolicySettingsPtrOutputWithContext(context.Context) PolicyPolicySettingsPtrOutput
}

type policyPolicySettingsPtrType PolicyPolicySettingsArgs

func PolicyPolicySettingsPtr(v *PolicyPolicySettingsArgs) PolicyPolicySettingsPtrInput {
	return (*policyPolicySettingsPtrType)(v)
}

func (*policyPolicySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPolicySettings)(nil)).Elem()
}

func (i *policyPolicySettingsPtrType) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return i.ToPolicyPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policyPolicySettingsPtrType) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicySettingsPtrOutput)
}

type PolicyPolicySettingsOutput struct{ *pulumi.OutputState }

func (PolicyPolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPolicySettings)(nil)).Elem()
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsOutput() PolicyPolicySettingsOutput {
	return o
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsOutputWithContext(ctx context.Context) PolicyPolicySettingsOutput {
	return o
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return o.ToPolicyPolicySettingsPtrOutputWithContext(context.Background())
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *PolicyPolicySettings {
		return &v
	}).(PolicyPolicySettingsPtrOutput)
}
func (o PolicyPolicySettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyPolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PolicyPolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicyPolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPolicySettings)(nil)).Elem()
}

func (o PolicyPolicySettingsPtrOutput) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return o
}

func (o PolicyPolicySettingsPtrOutput) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return o
}

func (o PolicyPolicySettingsPtrOutput) Elem() PolicyPolicySettingsOutput {
	return o.ApplyT(func(v *PolicyPolicySettings) PolicyPolicySettings { return *v }).(PolicyPolicySettingsOutput)
}

func (o PolicyPolicySettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o PolicyPolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyCustomRuleOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionMatchVariableOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionMatchVariableArrayOutput{})
	pulumi.RegisterOutputType(PolicyPolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicyPolicySettingsPtrOutput{})
}
