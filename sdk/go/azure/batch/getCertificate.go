// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing certificate in a Batch Account.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/batch_certificate.html.markdown.
func LookupCertificate(ctx *pulumi.Context, args *GetCertificateArgs, opts ...pulumi.InvokeOption) (*GetCertificateResult, error) {
	var rv GetCertificateResult
	err := ctx.Invoke("azure:batch/getCertificate:getCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificate.
type GetCertificateArgs struct {
	// The name of the Batch account.
	AccountName string `pulumi:"accountName"`
	// The name of the Batch certificate.
	Name string `pulumi:"name"`
	// The Name of the Resource Group where this Batch account exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getCertificate.
type GetCertificateResult struct {
	AccountName string `pulumi:"accountName"`
	// The format of the certificate, such as `Cer` or `Pfx`.
	Format string `pulumi:"format"`
	Name string `pulumi:"name"`
	// The public key of the certificate.
	PublicData string `pulumi:"publicData"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The thumbprint of the certificate.
	Thumbprint string `pulumi:"thumbprint"`
	// The algorithm of the certificate thumbprint.
	ThumbprintAlgorithm string `pulumi:"thumbprintAlgorithm"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}
