// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an API Management Property.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_property.html.markdown.
type Property struct {
	pulumi.CustomResourceState

	// The name of the API Management Service in which the API Management Property should exist. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringOutput `pulumi:"apiManagementName"`

	// The display name of this API Management Property.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`

	// The name of the API Management Property. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// The name of the Resource Group in which the API Management Property should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// Specifies whether the API Management Property is secret. Valid values are `true` or `false`. The default value is `false`.
	Secret pulumi.BoolOutput `pulumi:"secret"`

	// A list of tags to be applied to the API Management Property.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`

	// The value of this API Management Property.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewProperty registers a new resource with the given unique name, arguments, and options.
func NewProperty(ctx *pulumi.Context,
	name string, args *PropertyArgs, opts ...pulumi.ResourceOption) (*Property, error) {
	if args == nil || args.ApiManagementName == nil {
		return nil, errors.New("missing required argument 'ApiManagementName'")
	}
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Value == nil {
		return nil, errors.New("missing required argument 'Value'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ApiManagementName; i != nil { inputs["apiManagementName"] = i.ToStringOutput() }
		if i := args.DisplayName; i != nil { inputs["displayName"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.Secret; i != nil { inputs["secret"] = i.ToBoolOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToStringArrayOutput() }
		if i := args.Value; i != nil { inputs["value"] = i.ToStringOutput() }
	}
	var resource Property
	err := ctx.RegisterResource("azure:apimanagement/property:Property", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProperty gets an existing Property resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProperty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyState, opts ...pulumi.ResourceOption) (*Property, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.ApiManagementName; i != nil { inputs["apiManagementName"] = i.ToStringOutput() }
		if i := state.DisplayName; i != nil { inputs["displayName"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.Secret; i != nil { inputs["secret"] = i.ToBoolOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToStringArrayOutput() }
		if i := state.Value; i != nil { inputs["value"] = i.ToStringOutput() }
	}
	var resource Property
	err := ctx.ReadResource("azure:apimanagement/property:Property", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Property resources.
type PropertyState struct {
	// The name of the API Management Service in which the API Management Property should exist. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringInput `pulumi:"apiManagementName"`
	// The display name of this API Management Property.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The name of the API Management Property. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group in which the API Management Property should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Specifies whether the API Management Property is secret. Valid values are `true` or `false`. The default value is `false`.
	Secret pulumi.BoolInput `pulumi:"secret"`
	// A list of tags to be applied to the API Management Property.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The value of this API Management Property.
	Value pulumi.StringInput `pulumi:"value"`
}

// The set of arguments for constructing a Property resource.
type PropertyArgs struct {
	// The name of the API Management Service in which the API Management Property should exist. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringInput `pulumi:"apiManagementName"`
	// The display name of this API Management Property.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The name of the API Management Property. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group in which the API Management Property should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Specifies whether the API Management Property is secret. Valid values are `true` or `false`. The default value is `false`.
	Secret pulumi.BoolInput `pulumi:"secret"`
	// A list of tags to be applied to the API Management Property.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The value of this API Management Property.
	Value pulumi.StringInput `pulumi:"value"`
}
