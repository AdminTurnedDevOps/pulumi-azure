// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an API Management Facebook Identity Provider.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_identity_provider_facebook.html.markdown.
type IdentityProviderFacebook struct {
	s *pulumi.ResourceState
}

// NewIdentityProviderFacebook registers a new resource with the given unique name, arguments, and options.
func NewIdentityProviderFacebook(ctx *pulumi.Context,
	name string, args *IdentityProviderFacebookArgs, opts ...pulumi.ResourceOpt) (*IdentityProviderFacebook, error) {
	if args == nil || args.ApiManagementName == nil {
		return nil, errors.New("missing required argument 'ApiManagementName'")
	}
	if args == nil || args.AppId == nil {
		return nil, errors.New("missing required argument 'AppId'")
	}
	if args == nil || args.AppSecret == nil {
		return nil, errors.New("missing required argument 'AppSecret'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["apiManagementName"] = nil
		inputs["appId"] = nil
		inputs["appSecret"] = nil
		inputs["resourceGroupName"] = nil
	} else {
		inputs["apiManagementName"] = args.ApiManagementName
		inputs["appId"] = args.AppId
		inputs["appSecret"] = args.AppSecret
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	s, err := ctx.RegisterResource("azure:apimanagement/identityProviderFacebook:IdentityProviderFacebook", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityProviderFacebook{s: s}, nil
}

// GetIdentityProviderFacebook gets an existing IdentityProviderFacebook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProviderFacebook(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IdentityProviderFacebookState, opts ...pulumi.ResourceOpt) (*IdentityProviderFacebook, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["apiManagementName"] = state.ApiManagementName
		inputs["appId"] = state.AppId
		inputs["appSecret"] = state.AppSecret
		inputs["resourceGroupName"] = state.ResourceGroupName
	}
	s, err := ctx.ReadResource("azure:apimanagement/identityProviderFacebook:IdentityProviderFacebook", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityProviderFacebook{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *IdentityProviderFacebook) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *IdentityProviderFacebook) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Name of the API Management Service where this Facebook Identity Provider should be created. Changing this forces a new resource to be created.
func (r *IdentityProviderFacebook) ApiManagementName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["apiManagementName"])
}

// App ID for Facebook.
func (r *IdentityProviderFacebook) AppId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["appId"])
}

// App Secret for Facebook.
func (r *IdentityProviderFacebook) AppSecret() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["appSecret"])
}

// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
func (r *IdentityProviderFacebook) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// Input properties used for looking up and filtering IdentityProviderFacebook resources.
type IdentityProviderFacebookState struct {
	// The Name of the API Management Service where this Facebook Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// App ID for Facebook.
	AppId interface{}
	// App Secret for Facebook.
	AppSecret interface{}
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}

// The set of arguments for constructing a IdentityProviderFacebook resource.
type IdentityProviderFacebookArgs struct {
	// The Name of the API Management Service where this Facebook Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// App ID for Facebook.
	AppId interface{}
	// App Secret for Facebook.
	AppSecret interface{}
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}
