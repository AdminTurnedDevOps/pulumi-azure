// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an API Management AAD Identity Provider.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_identity_provider_aad.html.markdown.
type IdentityProviderAad struct {
	s *pulumi.ResourceState
}

// NewIdentityProviderAad registers a new resource with the given unique name, arguments, and options.
func NewIdentityProviderAad(ctx *pulumi.Context,
	name string, args *IdentityProviderAadArgs, opts ...pulumi.ResourceOpt) (*IdentityProviderAad, error) {
	if args == nil || args.AllowedTenants == nil {
		return nil, errors.New("missing required argument 'AllowedTenants'")
	}
	if args == nil || args.ApiManagementName == nil {
		return nil, errors.New("missing required argument 'ApiManagementName'")
	}
	if args == nil || args.ClientId == nil {
		return nil, errors.New("missing required argument 'ClientId'")
	}
	if args == nil || args.ClientSecret == nil {
		return nil, errors.New("missing required argument 'ClientSecret'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["allowedTenants"] = nil
		inputs["apiManagementName"] = nil
		inputs["clientId"] = nil
		inputs["clientSecret"] = nil
		inputs["resourceGroupName"] = nil
	} else {
		inputs["allowedTenants"] = args.AllowedTenants
		inputs["apiManagementName"] = args.ApiManagementName
		inputs["clientId"] = args.ClientId
		inputs["clientSecret"] = args.ClientSecret
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	s, err := ctx.RegisterResource("azure:apimanagement/identityProviderAad:IdentityProviderAad", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityProviderAad{s: s}, nil
}

// GetIdentityProviderAad gets an existing IdentityProviderAad resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProviderAad(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IdentityProviderAadState, opts ...pulumi.ResourceOpt) (*IdentityProviderAad, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["allowedTenants"] = state.AllowedTenants
		inputs["apiManagementName"] = state.ApiManagementName
		inputs["clientId"] = state.ClientId
		inputs["clientSecret"] = state.ClientSecret
		inputs["resourceGroupName"] = state.ResourceGroupName
	}
	s, err := ctx.ReadResource("azure:apimanagement/identityProviderAad:IdentityProviderAad", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityProviderAad{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *IdentityProviderAad) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *IdentityProviderAad) ID() pulumi.IDOutput {
	return r.s.ID()
}

// List of allowed AAD Tenants.
func (r *IdentityProviderAad) AllowedTenants() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["allowedTenants"])
}

// The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
func (r *IdentityProviderAad) ApiManagementName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["apiManagementName"])
}

// Client Id of the Application in the AAD Identity Provider.
func (r *IdentityProviderAad) ClientId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientId"])
}

// Client secret of the Application in the AAD Identity Provider.
func (r *IdentityProviderAad) ClientSecret() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientSecret"])
}

// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
func (r *IdentityProviderAad) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// Input properties used for looking up and filtering IdentityProviderAad resources.
type IdentityProviderAadState struct {
	// List of allowed AAD Tenants.
	AllowedTenants interface{}
	// The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// Client Id of the Application in the AAD Identity Provider.
	ClientId interface{}
	// Client secret of the Application in the AAD Identity Provider.
	ClientSecret interface{}
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}

// The set of arguments for constructing a IdentityProviderAad resource.
type IdentityProviderAadArgs struct {
	// List of allowed AAD Tenants.
	AllowedTenants interface{}
	// The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// Client Id of the Application in the AAD Identity Provider.
	ClientId interface{}
	// Client secret of the Application in the AAD Identity Provider.
	ClientSecret interface{}
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}
