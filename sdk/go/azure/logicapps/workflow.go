// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logicapps

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Logic App Workflow.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/logic_app_workflow.html.markdown.
type Workflow struct {
	pulumi.CustomResourceState

	// The Access Endpoint for the Logic App Workflow
	AccessEndpoint pulumi.StringOutput `pulumi:"accessEndpoint"`

	// Specifies the supported Azure location where the Logic App Workflow exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`

	// Specifies the name of the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// A map of Key-Value pairs.
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`

	// The name of the Resource Group in which the Logic App Workflow should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// Specifies the Schema to use for this Logic App Workflow. Defaults to `https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#`. Changing this forces a new resource to be created.
	WorkflowSchema pulumi.StringOutput `pulumi:"workflowSchema"`

	// Specifies the version of the Schema used for this Logic App Workflow. Defaults to `1.0.0.0`. Changing this forces a new resource to be create.d
	WorkflowVersion pulumi.StringOutput `pulumi:"workflowVersion"`
}

// NewWorkflow registers a new resource with the given unique name, arguments, and options.
func NewWorkflow(ctx *pulumi.Context,
	name string, args *WorkflowArgs, opts ...pulumi.ResourceOption) (*Workflow, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Parameters; i != nil { inputs["parameters"] = i.ToStringMapOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
		if i := args.WorkflowSchema; i != nil { inputs["workflowSchema"] = i.ToStringOutput() }
		if i := args.WorkflowVersion; i != nil { inputs["workflowVersion"] = i.ToStringOutput() }
	}
	var resource Workflow
	err := ctx.RegisterResource("azure:logicapps/workflow:Workflow", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflow gets an existing Workflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowState, opts ...pulumi.ResourceOption) (*Workflow, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AccessEndpoint; i != nil { inputs["accessEndpoint"] = i.ToStringOutput() }
		if i := state.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Parameters; i != nil { inputs["parameters"] = i.ToStringMapOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
		if i := state.WorkflowSchema; i != nil { inputs["workflowSchema"] = i.ToStringOutput() }
		if i := state.WorkflowVersion; i != nil { inputs["workflowVersion"] = i.ToStringOutput() }
	}
	var resource Workflow
	err := ctx.ReadResource("azure:logicapps/workflow:Workflow", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workflow resources.
type WorkflowState struct {
	// The Access Endpoint for the Logic App Workflow
	AccessEndpoint pulumi.StringInput `pulumi:"accessEndpoint"`
	// Specifies the supported Azure location where the Logic App Workflow exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of Key-Value pairs.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The name of the Resource Group in which the Logic App Workflow should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies the Schema to use for this Logic App Workflow. Defaults to `https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#`. Changing this forces a new resource to be created.
	WorkflowSchema pulumi.StringInput `pulumi:"workflowSchema"`
	// Specifies the version of the Schema used for this Logic App Workflow. Defaults to `1.0.0.0`. Changing this forces a new resource to be create.d
	WorkflowVersion pulumi.StringInput `pulumi:"workflowVersion"`
}

// The set of arguments for constructing a Workflow resource.
type WorkflowArgs struct {
	// Specifies the supported Azure location where the Logic App Workflow exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of Key-Value pairs.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The name of the Resource Group in which the Logic App Workflow should be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies the Schema to use for this Logic App Workflow. Defaults to `https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#`. Changing this forces a new resource to be created.
	WorkflowSchema pulumi.StringInput `pulumi:"workflowSchema"`
	// Specifies the version of the Schema used for this Logic App Workflow. Defaults to `1.0.0.0`. Changing this forces a new resource to be create.d
	WorkflowVersion pulumi.StringInput `pulumi:"workflowVersion"`
}
