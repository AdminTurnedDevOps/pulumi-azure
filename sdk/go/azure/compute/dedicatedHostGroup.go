// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package compute

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manage a Dedicated Host Group.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/dedicated_host_group.html.markdown.
type DedicatedHostGroup struct {
	s *pulumi.ResourceState
}

// NewDedicatedHostGroup registers a new resource with the given unique name, arguments, and options.
func NewDedicatedHostGroup(ctx *pulumi.Context,
	name string, args *DedicatedHostGroupArgs, opts ...pulumi.ResourceOpt) (*DedicatedHostGroup, error) {
	if args == nil || args.PlatformFaultDomainCount == nil {
		return nil, errors.New("missing required argument 'PlatformFaultDomainCount'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["platformFaultDomainCount"] = nil
		inputs["resourceGroupName"] = nil
		inputs["tags"] = nil
		inputs["zones"] = nil
	} else {
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["platformFaultDomainCount"] = args.PlatformFaultDomainCount
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
		inputs["zones"] = args.Zones
	}
	s, err := ctx.RegisterResource("azure:compute/dedicatedHostGroup:DedicatedHostGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DedicatedHostGroup{s: s}, nil
}

// GetDedicatedHostGroup gets an existing DedicatedHostGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDedicatedHostGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DedicatedHostGroupState, opts ...pulumi.ResourceOpt) (*DedicatedHostGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["platformFaultDomainCount"] = state.PlatformFaultDomainCount
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["tags"] = state.Tags
		inputs["zones"] = state.Zones
	}
	s, err := ctx.ReadResource("azure:compute/dedicatedHostGroup:DedicatedHostGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DedicatedHostGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *DedicatedHostGroup) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *DedicatedHostGroup) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
func (r *DedicatedHostGroup) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// Specifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
func (r *DedicatedHostGroup) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
func (r *DedicatedHostGroup) PlatformFaultDomainCount() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["platformFaultDomainCount"])
}

// Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
func (r *DedicatedHostGroup) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// A mapping of tags to assign to the resource.
func (r *DedicatedHostGroup) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// A list of Availability Zones in which the Dedicated Host Group should be located. Changing this forces a new resource to be created. 
func (r *DedicatedHostGroup) Zones() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["zones"])
}

// Input properties used for looking up and filtering DedicatedHostGroup resources.
type DedicatedHostGroupState struct {
	// The Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
	Name interface{}
	// The number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
	PlatformFaultDomainCount interface{}
	// Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// A list of Availability Zones in which the Dedicated Host Group should be located. Changing this forces a new resource to be created. 
	Zones interface{}
}

// The set of arguments for constructing a DedicatedHostGroup resource.
type DedicatedHostGroupArgs struct {
	// The Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
	Name interface{}
	// The number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
	PlatformFaultDomainCount interface{}
	// Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// A list of Availability Zones in which the Dedicated Host Group should be located. Changing this forces a new resource to be created. 
	Zones interface{}
}
