// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing Redis Cache
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/redis_cache.html.markdown.
func LookupCache(ctx *pulumi.Context, args *GetCacheArgs, opts ...pulumi.InvokeOption) (*GetCacheResult, error) {
	var rv GetCacheResult
	err := ctx.Invoke("azure:redis/getCache:getCache", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCache.
type GetCacheArgs struct {
	// The name of the Redis cache
	Name string `pulumi:"name"`
	// The name of the resource group the Redis cache instance is located in.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	Zones *[]string `pulumi:"zones"`
}

// A collection of values returned by getCache.
type GetCacheResult struct {
	// The size of the Redis Cache deployed.
	Capacity int `pulumi:"capacity"`
	// Whether the SSL port is enabled.
	EnableNonSslPort bool `pulumi:"enableNonSslPort"`
	// The SKU family/pricing group used. Possible values are `C` (for Basic/Standard SKU family) and `P` (for `Premium`)
	Family string `pulumi:"family"`
	// The Hostname of the Redis Instance
	Hostname string `pulumi:"hostname"`
	// The location of the Redis Cache.
	Location string `pulumi:"location"`
	// The minimum TLS version.
	MinimumTlsVersion string `pulumi:"minimumTlsVersion"`
	Name string `pulumi:"name"`
	// A list of `patchSchedule` blocks as defined below - only available for Premium SKU's.
	PatchSchedules []GetCachePatchSchedulesResult `pulumi:"patchSchedules"`
	// The non-SSL Port of the Redis Instance
	Port int `pulumi:"port"`
	// The Primary Access Key for the Redis Instance
	PrimaryAccessKey string `pulumi:"primaryAccessKey"`
	PrivateStaticIpAddress string `pulumi:"privateStaticIpAddress"`
	// A `redisConfiguration` block as defined below.
	RedisConfigurations []GetCacheRedisConfigurationsResult `pulumi:"redisConfigurations"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Secondary Access Key for the Redis Instance
	SecondaryAccessKey string `pulumi:"secondaryAccessKey"`
	ShardCount int `pulumi:"shardCount"`
	// The SKU of Redis used. Possible values are `Basic`, `Standard` and `Premium`.
	SkuName string `pulumi:"skuName"`
	// The SSL Port of the Redis Instance
	SslPort int `pulumi:"sslPort"`
	SubnetId string `pulumi:"subnetId"`
	Tags map[string]string `pulumi:"tags"`
	Zones []string `pulumi:"zones"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}
type GetCachePatchSchedulesResult struct {
	// the Weekday name for the patch item
	DayOfWeek string `pulumi:"dayOfWeek"`
	// The Start Hour for maintenance in UTC
	StartHourUtc int `pulumi:"startHourUtc"`
}
type GetCacheRedisConfigurationsResult struct {
	AofBackupEnabled bool `pulumi:"aofBackupEnabled"`
	AofStorageConnectionString0 string `pulumi:"aofStorageConnectionString0"`
	AofStorageConnectionString1 string `pulumi:"aofStorageConnectionString1"`
	// Specifies if authentication is enabled
	EnableAuthentication bool `pulumi:"enableAuthentication"`
	Maxclients int `pulumi:"maxclients"`
	// Value in megabytes reserved to accommodate for memory fragmentation.
	MaxfragmentationmemoryReserved int `pulumi:"maxfragmentationmemoryReserved"`
	// The max-memory delta for this Redis instance.
	MaxmemoryDelta int `pulumi:"maxmemoryDelta"`
	// How Redis will select what to remove when `maxmemory` is reached.
	MaxmemoryPolicy string `pulumi:"maxmemoryPolicy"`
	// The value in megabytes reserved for non-cache usage e.g. failover
	MaxmemoryReserved int `pulumi:"maxmemoryReserved"`
	NotifyKeyspaceEvents string `pulumi:"notifyKeyspaceEvents"`
	// Is Backup Enabled? Only supported on Premium SKU's.
	RdbBackupEnabled bool `pulumi:"rdbBackupEnabled"`
	// The Backup Frequency in Minutes. Only supported on Premium SKU's.
	RdbBackupFrequency int `pulumi:"rdbBackupFrequency"`
	// The maximum number of snapshots that can be created as a backup.
	RdbBackupMaxSnapshotCount int `pulumi:"rdbBackupMaxSnapshotCount"`
	// The Connection String to the Storage Account. Only supported for Premium SKU's.
	RdbStorageConnectionString string `pulumi:"rdbStorageConnectionString"`
}
