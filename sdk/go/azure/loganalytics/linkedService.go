// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package loganalytics

import (
	"context"
	"reflect"
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Links a Log Analytics (formally Operational Insights) Workspace to another resource. The (currently) only linkable service is an Azure Automation Account.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/log_analytics_linked_service.html.markdown.
type LinkedService struct {
	pulumi.CustomResourceState

	// Name of the type of linkedServices resource to connect to the Log Analytics Workspace specified in `workspaceName`. Currently it defaults to and only supports `automation` as a value. Changing this forces a new resource to be created.
	LinkedServiceName pulumi.StringOutput `pulumi:"linkedServiceName"`

	// A `linkedServiceProperties` block as defined below.
	LinkedServiceProperties LinkedServiceLinkedServicePropertiesOutput `pulumi:"linkedServiceProperties"`

	// The automatically generated name of the Linked Service. This cannot be specified. The format is always `<workspace_name>/<linked_service_name>` e.g. `workspace1/Automation`
	Name pulumi.StringOutput `pulumi:"name"`

	// The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// Name of the Log Analytics Workspace that will contain the linkedServices resource. Changing this forces a new resource to be created.
	WorkspaceName pulumi.StringOutput `pulumi:"workspaceName"`
}

// NewLinkedService registers a new resource with the given unique name, arguments, and options.
func NewLinkedService(ctx *pulumi.Context,
	name string, args *LinkedServiceArgs, opts ...pulumi.ResourceOption) (*LinkedService, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.LinkedServiceName; i != nil { inputs["linkedServiceName"] = i.ToStringOutput() }
		if i := args.LinkedServiceProperties; i != nil { inputs["linkedServiceProperties"] = i.ToLinkedServiceLinkedServicePropertiesOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.ResourceId; i != nil { inputs["resourceId"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
		if i := args.WorkspaceName; i != nil { inputs["workspaceName"] = i.ToStringOutput() }
	}
	var resource LinkedService
	err := ctx.RegisterResource("azure:loganalytics/linkedService:LinkedService", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLinkedService gets an existing LinkedService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLinkedService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LinkedServiceState, opts ...pulumi.ResourceOption) (*LinkedService, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.LinkedServiceName; i != nil { inputs["linkedServiceName"] = i.ToStringOutput() }
		if i := state.LinkedServiceProperties; i != nil { inputs["linkedServiceProperties"] = i.ToLinkedServiceLinkedServicePropertiesOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.ResourceId; i != nil { inputs["resourceId"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
		if i := state.WorkspaceName; i != nil { inputs["workspaceName"] = i.ToStringOutput() }
	}
	var resource LinkedService
	err := ctx.ReadResource("azure:loganalytics/linkedService:LinkedService", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LinkedService resources.
type LinkedServiceState struct {
	// Name of the type of linkedServices resource to connect to the Log Analytics Workspace specified in `workspaceName`. Currently it defaults to and only supports `automation` as a value. Changing this forces a new resource to be created.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// A `linkedServiceProperties` block as defined below.
	LinkedServiceProperties LinkedServiceLinkedServicePropertiesInput `pulumi:"linkedServiceProperties"`
	// The automatically generated name of the Linked Service. This cannot be specified. The format is always `<workspace_name>/<linked_service_name>` e.g. `workspace1/Automation`
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Name of the Log Analytics Workspace that will contain the linkedServices resource. Changing this forces a new resource to be created.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

// The set of arguments for constructing a LinkedService resource.
type LinkedServiceArgs struct {
	// Name of the type of linkedServices resource to connect to the Log Analytics Workspace specified in `workspaceName`. Currently it defaults to and only supports `automation` as a value. Changing this forces a new resource to be created.
	LinkedServiceName pulumi.StringInput `pulumi:"linkedServiceName"`
	// A `linkedServiceProperties` block as defined below.
	LinkedServiceProperties LinkedServiceLinkedServicePropertiesInput `pulumi:"linkedServiceProperties"`
	// The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Name of the Log Analytics Workspace that will contain the linkedServices resource. Changing this forces a new resource to be created.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}
type LinkedServiceLinkedServiceProperties struct {
	// The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
	ResourceId string `pulumi:"resourceId"`
}
var linkedServiceLinkedServicePropertiesType = reflect.TypeOf((*LinkedServiceLinkedServiceProperties)(nil)).Elem()

type LinkedServiceLinkedServicePropertiesInput interface {
	pulumi.Input

	ToLinkedServiceLinkedServicePropertiesOutput() LinkedServiceLinkedServicePropertiesOutput
	ToLinkedServiceLinkedServicePropertiesOutputWithContext(ctx context.Context) LinkedServiceLinkedServicePropertiesOutput
}

type LinkedServiceLinkedServicePropertiesArgs struct {
	// The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (LinkedServiceLinkedServicePropertiesArgs) ElementType() reflect.Type {
	return linkedServiceLinkedServicePropertiesType
}

func (a LinkedServiceLinkedServicePropertiesArgs) ToLinkedServiceLinkedServicePropertiesOutput() LinkedServiceLinkedServicePropertiesOutput {
	return pulumi.ToOutput(a).(LinkedServiceLinkedServicePropertiesOutput)
}

func (a LinkedServiceLinkedServicePropertiesArgs) ToLinkedServiceLinkedServicePropertiesOutputWithContext(ctx context.Context) LinkedServiceLinkedServicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, a).(LinkedServiceLinkedServicePropertiesOutput)
}

type LinkedServiceLinkedServicePropertiesOutput struct { *pulumi.OutputState }

// The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
func (o LinkedServiceLinkedServicePropertiesOutput) ResourceId() pulumi.StringOutput {
	return o.Apply(func(v LinkedServiceLinkedServiceProperties) string {
		return v.ResourceId
	}).(pulumi.StringOutput)
}

func (LinkedServiceLinkedServicePropertiesOutput) ElementType() reflect.Type {
	return linkedServiceLinkedServicePropertiesType
}

func (o LinkedServiceLinkedServicePropertiesOutput) ToLinkedServiceLinkedServicePropertiesOutput() LinkedServiceLinkedServicePropertiesOutput {
	return o
}

func (o LinkedServiceLinkedServicePropertiesOutput) ToLinkedServiceLinkedServicePropertiesOutputWithContext(ctx context.Context) LinkedServiceLinkedServicePropertiesOutput {
	return o
}

func init() { pulumi.RegisterOutputType(LinkedServiceLinkedServicePropertiesOutput{}) }

