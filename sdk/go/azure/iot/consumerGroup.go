// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Consumer Group within an IotHub
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/iothub_consumer_group.html.markdown.
type ConsumerGroup struct {
	pulumi.CustomResourceState

	// The name of the Event Hub-compatible endpoint in the IoT hub. Changing this forces a new resource to be created.
	EventhubEndpointName pulumi.StringOutput `pulumi:"eventhubEndpointName"`

	// The name of the IoT Hub. Changing this forces a new resource to be created.
	IothubName pulumi.StringOutput `pulumi:"iothubName"`

	// The name of this Consumer Group. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// The name of the resource group that contains the IoT hub. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewConsumerGroup registers a new resource with the given unique name, arguments, and options.
func NewConsumerGroup(ctx *pulumi.Context,
	name string, args *ConsumerGroupArgs, opts ...pulumi.ResourceOption) (*ConsumerGroup, error) {
	if args == nil || args.EventhubEndpointName == nil {
		return nil, errors.New("missing required argument 'EventhubEndpointName'")
	}
	if args == nil || args.IothubName == nil {
		return nil, errors.New("missing required argument 'IothubName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.EventhubEndpointName; i != nil { inputs["eventhubEndpointName"] = i.ToStringOutput() }
		if i := args.IothubName; i != nil { inputs["iothubName"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
	}
	var resource ConsumerGroup
	err := ctx.RegisterResource("azure:iot/consumerGroup:ConsumerGroup", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConsumerGroup gets an existing ConsumerGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConsumerGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConsumerGroupState, opts ...pulumi.ResourceOption) (*ConsumerGroup, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.EventhubEndpointName; i != nil { inputs["eventhubEndpointName"] = i.ToStringOutput() }
		if i := state.IothubName; i != nil { inputs["iothubName"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
	}
	var resource ConsumerGroup
	err := ctx.ReadResource("azure:iot/consumerGroup:ConsumerGroup", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConsumerGroup resources.
type ConsumerGroupState struct {
	// The name of the Event Hub-compatible endpoint in the IoT hub. Changing this forces a new resource to be created.
	EventhubEndpointName pulumi.StringInput `pulumi:"eventhubEndpointName"`
	// The name of the IoT Hub. Changing this forces a new resource to be created.
	IothubName pulumi.StringInput `pulumi:"iothubName"`
	// The name of this Consumer Group. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group that contains the IoT hub. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a ConsumerGroup resource.
type ConsumerGroupArgs struct {
	// The name of the Event Hub-compatible endpoint in the IoT hub. Changing this forces a new resource to be created.
	EventhubEndpointName pulumi.StringInput `pulumi:"eventhubEndpointName"`
	// The name of the IoT Hub. Changing this forces a new resource to be created.
	IothubName pulumi.StringInput `pulumi:"iothubName"`
	// The name of this Consumer Group. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group that contains the IoT hub. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}
