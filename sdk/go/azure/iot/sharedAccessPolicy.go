// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an IotHub Shared Access Policy
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/iothub_shared_access_policy.html.markdown.
type SharedAccessPolicy struct {
	pulumi.CustomResourceState

	// Adds `DeviceConnect` permission to this Shared Access Account. It allows sending and receiving on the device-side endpoints.
	DeviceConnect pulumi.BoolOutput `pulumi:"deviceConnect"`

	// The name of the IoTHub to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubName pulumi.StringOutput `pulumi:"iothubName"`

	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// The primary connection string of the Shared Access Policy.
	PrimaryConnectionString pulumi.StringOutput `pulumi:"primaryConnectionString"`

	// The primary key used to create the authentication token.
	PrimaryKey pulumi.StringOutput `pulumi:"primaryKey"`

	// Adds `RegistryRead` permission to this Shared Access Account. It allows read access to the identity registry.
	RegistryRead pulumi.BoolOutput `pulumi:"registryRead"`

	// Adds `RegistryWrite` permission to this Shared Access Account. It allows write access to the identity registry.
	RegistryWrite pulumi.BoolOutput `pulumi:"registryWrite"`

	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// The secondary connection string of the Shared Access Policy.
	SecondaryConnectionString pulumi.StringOutput `pulumi:"secondaryConnectionString"`

	// The secondary key used to create the authentication token.
	SecondaryKey pulumi.StringOutput `pulumi:"secondaryKey"`

	// Adds `ServiceConnect` permission to this Shared Access Account. It allows sending and receiving on the cloud-side endpoints.
	ServiceConnect pulumi.BoolOutput `pulumi:"serviceConnect"`
}

// NewSharedAccessPolicy registers a new resource with the given unique name, arguments, and options.
func NewSharedAccessPolicy(ctx *pulumi.Context,
	name string, args *SharedAccessPolicyArgs, opts ...pulumi.ResourceOption) (*SharedAccessPolicy, error) {
	if args == nil || args.IothubName == nil {
		return nil, errors.New("missing required argument 'IothubName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.DeviceConnect; i != nil { inputs["deviceConnect"] = i.ToBoolOutput() }
		if i := args.IothubName; i != nil { inputs["iothubName"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.RegistryRead; i != nil { inputs["registryRead"] = i.ToBoolOutput() }
		if i := args.RegistryWrite; i != nil { inputs["registryWrite"] = i.ToBoolOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.ServiceConnect; i != nil { inputs["serviceConnect"] = i.ToBoolOutput() }
	}
	var resource SharedAccessPolicy
	err := ctx.RegisterResource("azure:iot/sharedAccessPolicy:SharedAccessPolicy", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedAccessPolicy gets an existing SharedAccessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedAccessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedAccessPolicyState, opts ...pulumi.ResourceOption) (*SharedAccessPolicy, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.DeviceConnect; i != nil { inputs["deviceConnect"] = i.ToBoolOutput() }
		if i := state.IothubName; i != nil { inputs["iothubName"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.PrimaryConnectionString; i != nil { inputs["primaryConnectionString"] = i.ToStringOutput() }
		if i := state.PrimaryKey; i != nil { inputs["primaryKey"] = i.ToStringOutput() }
		if i := state.RegistryRead; i != nil { inputs["registryRead"] = i.ToBoolOutput() }
		if i := state.RegistryWrite; i != nil { inputs["registryWrite"] = i.ToBoolOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.SecondaryConnectionString; i != nil { inputs["secondaryConnectionString"] = i.ToStringOutput() }
		if i := state.SecondaryKey; i != nil { inputs["secondaryKey"] = i.ToStringOutput() }
		if i := state.ServiceConnect; i != nil { inputs["serviceConnect"] = i.ToBoolOutput() }
	}
	var resource SharedAccessPolicy
	err := ctx.ReadResource("azure:iot/sharedAccessPolicy:SharedAccessPolicy", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SharedAccessPolicy resources.
type SharedAccessPolicyState struct {
	// Adds `DeviceConnect` permission to this Shared Access Account. It allows sending and receiving on the device-side endpoints.
	DeviceConnect pulumi.BoolInput `pulumi:"deviceConnect"`
	// The name of the IoTHub to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubName pulumi.StringInput `pulumi:"iothubName"`
	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The primary connection string of the Shared Access Policy.
	PrimaryConnectionString pulumi.StringInput `pulumi:"primaryConnectionString"`
	// The primary key used to create the authentication token.
	PrimaryKey pulumi.StringInput `pulumi:"primaryKey"`
	// Adds `RegistryRead` permission to this Shared Access Account. It allows read access to the identity registry.
	RegistryRead pulumi.BoolInput `pulumi:"registryRead"`
	// Adds `RegistryWrite` permission to this Shared Access Account. It allows write access to the identity registry.
	RegistryWrite pulumi.BoolInput `pulumi:"registryWrite"`
	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The secondary connection string of the Shared Access Policy.
	SecondaryConnectionString pulumi.StringInput `pulumi:"secondaryConnectionString"`
	// The secondary key used to create the authentication token.
	SecondaryKey pulumi.StringInput `pulumi:"secondaryKey"`
	// Adds `ServiceConnect` permission to this Shared Access Account. It allows sending and receiving on the cloud-side endpoints.
	ServiceConnect pulumi.BoolInput `pulumi:"serviceConnect"`
}

// The set of arguments for constructing a SharedAccessPolicy resource.
type SharedAccessPolicyArgs struct {
	// Adds `DeviceConnect` permission to this Shared Access Account. It allows sending and receiving on the device-side endpoints.
	DeviceConnect pulumi.BoolInput `pulumi:"deviceConnect"`
	// The name of the IoTHub to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubName pulumi.StringInput `pulumi:"iothubName"`
	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Adds `RegistryRead` permission to this Shared Access Account. It allows read access to the identity registry.
	RegistryRead pulumi.BoolInput `pulumi:"registryRead"`
	// Adds `RegistryWrite` permission to this Shared Access Account. It allows write access to the identity registry.
	RegistryWrite pulumi.BoolInput `pulumi:"registryWrite"`
	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Adds `ServiceConnect` permission to this Shared Access Account. It allows sending and receiving on the cloud-side endpoints.
	ServiceConnect pulumi.BoolInput `pulumi:"serviceConnect"`
}
