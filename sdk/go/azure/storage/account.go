// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"context"
	"reflect"
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an Azure Storage Account.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/storage_account.html.markdown.
type Account struct {
	pulumi.CustomResourceState

	// Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
	AccessTier pulumi.StringOutput `pulumi:"accessTier"`

	// The Encryption Source for this Storage Account. Possible values are `Microsoft.Keyvault` and `Microsoft.Storage`. Defaults to `Microsoft.Storage`.
	AccountEncryptionSource pulumi.StringOutput `pulumi:"accountEncryptionSource"`

	// Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Changing this forces a new resource to be created. Defaults to `Storage`.
	AccountKind pulumi.StringOutput `pulumi:"accountKind"`

	// Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
	AccountReplicationType pulumi.StringOutput `pulumi:"accountReplicationType"`

	// Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
	AccountTier pulumi.StringOutput `pulumi:"accountTier"`

	AccountType pulumi.StringOutput `pulumi:"accountType"`

	// A `customDomain` block as documented below.
	CustomDomain AccountCustomDomainOutput `pulumi:"customDomain"`

	// Boolean flag which controls if advanced threat protection is enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/common/storage-advanced-threat-protection) for more information. Defaults to `false`.
	EnableAdvancedThreatProtection pulumi.BoolOutput `pulumi:"enableAdvancedThreatProtection"`

	// Boolean flag which controls if Encryption Services are enabled for Blob storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
	EnableBlobEncryption pulumi.BoolOutput `pulumi:"enableBlobEncryption"`

	// Boolean flag which controls if Encryption Services are enabled for File storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
	EnableFileEncryption pulumi.BoolOutput `pulumi:"enableFileEncryption"`

	// Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
	// for more information.
	EnableHttpsTrafficOnly pulumi.BoolOutput `pulumi:"enableHttpsTrafficOnly"`

	// A `identity` block as defined below.
	Identity AccountIdentityOutput `pulumi:"identity"`

	// Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
	IsHnsEnabled pulumi.BoolOutput `pulumi:"isHnsEnabled"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`

	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	Name pulumi.StringOutput `pulumi:"name"`

	// A `networkRules` block as documented below.
	NetworkRules AccountNetworkRulesOutput `pulumi:"networkRules"`

	// The primary access key for the storage account.
	PrimaryAccessKey pulumi.StringOutput `pulumi:"primaryAccessKey"`

	// The connection string associated with the primary blob location.
	PrimaryBlobConnectionString pulumi.StringOutput `pulumi:"primaryBlobConnectionString"`

	// The endpoint URL for blob storage in the primary location.
	PrimaryBlobEndpoint pulumi.StringOutput `pulumi:"primaryBlobEndpoint"`

	// The hostname with port if applicable for blob storage in the primary location.
	PrimaryBlobHost pulumi.StringOutput `pulumi:"primaryBlobHost"`

	// The connection string associated with the primary location.
	PrimaryConnectionString pulumi.StringOutput `pulumi:"primaryConnectionString"`

	// The endpoint URL for DFS storage in the primary location.
	PrimaryDfsEndpoint pulumi.StringOutput `pulumi:"primaryDfsEndpoint"`

	// The hostname with port if applicable for DFS storage in the primary location.
	PrimaryDfsHost pulumi.StringOutput `pulumi:"primaryDfsHost"`

	// The endpoint URL for file storage in the primary location.
	PrimaryFileEndpoint pulumi.StringOutput `pulumi:"primaryFileEndpoint"`

	// The hostname with port if applicable for file storage in the primary location.
	PrimaryFileHost pulumi.StringOutput `pulumi:"primaryFileHost"`

	// The primary location of the storage account.
	PrimaryLocation pulumi.StringOutput `pulumi:"primaryLocation"`

	// The endpoint URL for queue storage in the primary location.
	PrimaryQueueEndpoint pulumi.StringOutput `pulumi:"primaryQueueEndpoint"`

	// The hostname with port if applicable for queue storage in the primary location.
	PrimaryQueueHost pulumi.StringOutput `pulumi:"primaryQueueHost"`

	// The endpoint URL for table storage in the primary location.
	PrimaryTableEndpoint pulumi.StringOutput `pulumi:"primaryTableEndpoint"`

	// The hostname with port if applicable for table storage in the primary location.
	PrimaryTableHost pulumi.StringOutput `pulumi:"primaryTableHost"`

	// The endpoint URL for web storage in the primary location.
	PrimaryWebEndpoint pulumi.StringOutput `pulumi:"primaryWebEndpoint"`

	// The hostname with port if applicable for web storage in the primary location.
	PrimaryWebHost pulumi.StringOutput `pulumi:"primaryWebHost"`

	// A `queueProperties` block as defined below.
	QueueProperties AccountQueuePropertiesOutput `pulumi:"queueProperties"`

	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// The secondary access key for the storage account.
	SecondaryAccessKey pulumi.StringOutput `pulumi:"secondaryAccessKey"`

	// The connection string associated with the secondary blob location.
	SecondaryBlobConnectionString pulumi.StringOutput `pulumi:"secondaryBlobConnectionString"`

	// The endpoint URL for blob storage in the secondary location.
	SecondaryBlobEndpoint pulumi.StringOutput `pulumi:"secondaryBlobEndpoint"`

	// The hostname with port if applicable for blob storage in the secondary location.
	SecondaryBlobHost pulumi.StringOutput `pulumi:"secondaryBlobHost"`

	// The connection string associated with the secondary location.
	SecondaryConnectionString pulumi.StringOutput `pulumi:"secondaryConnectionString"`

	// The endpoint URL for DFS storage in the secondary location.
	SecondaryDfsEndpoint pulumi.StringOutput `pulumi:"secondaryDfsEndpoint"`

	// The hostname with port if applicable for DFS storage in the secondary location.
	SecondaryDfsHost pulumi.StringOutput `pulumi:"secondaryDfsHost"`

	// The endpoint URL for file storage in the secondary location.
	SecondaryFileEndpoint pulumi.StringOutput `pulumi:"secondaryFileEndpoint"`

	// The hostname with port if applicable for file storage in the secondary location.
	SecondaryFileHost pulumi.StringOutput `pulumi:"secondaryFileHost"`

	// The secondary location of the storage account.
	SecondaryLocation pulumi.StringOutput `pulumi:"secondaryLocation"`

	// The endpoint URL for queue storage in the secondary location.
	SecondaryQueueEndpoint pulumi.StringOutput `pulumi:"secondaryQueueEndpoint"`

	// The hostname with port if applicable for queue storage in the secondary location.
	SecondaryQueueHost pulumi.StringOutput `pulumi:"secondaryQueueHost"`

	// The endpoint URL for table storage in the secondary location.
	SecondaryTableEndpoint pulumi.StringOutput `pulumi:"secondaryTableEndpoint"`

	// The hostname with port if applicable for table storage in the secondary location.
	SecondaryTableHost pulumi.StringOutput `pulumi:"secondaryTableHost"`

	// The endpoint URL for web storage in the secondary location.
	SecondaryWebEndpoint pulumi.StringOutput `pulumi:"secondaryWebEndpoint"`

	// The hostname with port if applicable for web storage in the secondary location.
	SecondaryWebHost pulumi.StringOutput `pulumi:"secondaryWebHost"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil || args.AccountReplicationType == nil {
		return nil, errors.New("missing required argument 'AccountReplicationType'")
	}
	if args == nil || args.AccountTier == nil {
		return nil, errors.New("missing required argument 'AccountTier'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.AccessTier; i != nil { inputs["accessTier"] = i.ToStringOutput() }
		if i := args.AccountEncryptionSource; i != nil { inputs["accountEncryptionSource"] = i.ToStringOutput() }
		if i := args.AccountKind; i != nil { inputs["accountKind"] = i.ToStringOutput() }
		if i := args.AccountReplicationType; i != nil { inputs["accountReplicationType"] = i.ToStringOutput() }
		if i := args.AccountTier; i != nil { inputs["accountTier"] = i.ToStringOutput() }
		if i := args.AccountType; i != nil { inputs["accountType"] = i.ToStringOutput() }
		if i := args.CustomDomain; i != nil { inputs["customDomain"] = i.ToAccountCustomDomainOutput() }
		if i := args.EnableAdvancedThreatProtection; i != nil { inputs["enableAdvancedThreatProtection"] = i.ToBoolOutput() }
		if i := args.EnableBlobEncryption; i != nil { inputs["enableBlobEncryption"] = i.ToBoolOutput() }
		if i := args.EnableFileEncryption; i != nil { inputs["enableFileEncryption"] = i.ToBoolOutput() }
		if i := args.EnableHttpsTrafficOnly; i != nil { inputs["enableHttpsTrafficOnly"] = i.ToBoolOutput() }
		if i := args.Identity; i != nil { inputs["identity"] = i.ToAccountIdentityOutput() }
		if i := args.IsHnsEnabled; i != nil { inputs["isHnsEnabled"] = i.ToBoolOutput() }
		if i := args.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.NetworkRules; i != nil { inputs["networkRules"] = i.ToAccountNetworkRulesOutput() }
		if i := args.QueueProperties; i != nil { inputs["queueProperties"] = i.ToAccountQueuePropertiesOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToStringMapOutput() }
	}
	var resource Account
	err := ctx.RegisterResource("azure:storage/account:Account", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AccessTier; i != nil { inputs["accessTier"] = i.ToStringOutput() }
		if i := state.AccountEncryptionSource; i != nil { inputs["accountEncryptionSource"] = i.ToStringOutput() }
		if i := state.AccountKind; i != nil { inputs["accountKind"] = i.ToStringOutput() }
		if i := state.AccountReplicationType; i != nil { inputs["accountReplicationType"] = i.ToStringOutput() }
		if i := state.AccountTier; i != nil { inputs["accountTier"] = i.ToStringOutput() }
		if i := state.AccountType; i != nil { inputs["accountType"] = i.ToStringOutput() }
		if i := state.CustomDomain; i != nil { inputs["customDomain"] = i.ToAccountCustomDomainOutput() }
		if i := state.EnableAdvancedThreatProtection; i != nil { inputs["enableAdvancedThreatProtection"] = i.ToBoolOutput() }
		if i := state.EnableBlobEncryption; i != nil { inputs["enableBlobEncryption"] = i.ToBoolOutput() }
		if i := state.EnableFileEncryption; i != nil { inputs["enableFileEncryption"] = i.ToBoolOutput() }
		if i := state.EnableHttpsTrafficOnly; i != nil { inputs["enableHttpsTrafficOnly"] = i.ToBoolOutput() }
		if i := state.Identity; i != nil { inputs["identity"] = i.ToAccountIdentityOutput() }
		if i := state.IsHnsEnabled; i != nil { inputs["isHnsEnabled"] = i.ToBoolOutput() }
		if i := state.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.NetworkRules; i != nil { inputs["networkRules"] = i.ToAccountNetworkRulesOutput() }
		if i := state.PrimaryAccessKey; i != nil { inputs["primaryAccessKey"] = i.ToStringOutput() }
		if i := state.PrimaryBlobConnectionString; i != nil { inputs["primaryBlobConnectionString"] = i.ToStringOutput() }
		if i := state.PrimaryBlobEndpoint; i != nil { inputs["primaryBlobEndpoint"] = i.ToStringOutput() }
		if i := state.PrimaryBlobHost; i != nil { inputs["primaryBlobHost"] = i.ToStringOutput() }
		if i := state.PrimaryConnectionString; i != nil { inputs["primaryConnectionString"] = i.ToStringOutput() }
		if i := state.PrimaryDfsEndpoint; i != nil { inputs["primaryDfsEndpoint"] = i.ToStringOutput() }
		if i := state.PrimaryDfsHost; i != nil { inputs["primaryDfsHost"] = i.ToStringOutput() }
		if i := state.PrimaryFileEndpoint; i != nil { inputs["primaryFileEndpoint"] = i.ToStringOutput() }
		if i := state.PrimaryFileHost; i != nil { inputs["primaryFileHost"] = i.ToStringOutput() }
		if i := state.PrimaryLocation; i != nil { inputs["primaryLocation"] = i.ToStringOutput() }
		if i := state.PrimaryQueueEndpoint; i != nil { inputs["primaryQueueEndpoint"] = i.ToStringOutput() }
		if i := state.PrimaryQueueHost; i != nil { inputs["primaryQueueHost"] = i.ToStringOutput() }
		if i := state.PrimaryTableEndpoint; i != nil { inputs["primaryTableEndpoint"] = i.ToStringOutput() }
		if i := state.PrimaryTableHost; i != nil { inputs["primaryTableHost"] = i.ToStringOutput() }
		if i := state.PrimaryWebEndpoint; i != nil { inputs["primaryWebEndpoint"] = i.ToStringOutput() }
		if i := state.PrimaryWebHost; i != nil { inputs["primaryWebHost"] = i.ToStringOutput() }
		if i := state.QueueProperties; i != nil { inputs["queueProperties"] = i.ToAccountQueuePropertiesOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.SecondaryAccessKey; i != nil { inputs["secondaryAccessKey"] = i.ToStringOutput() }
		if i := state.SecondaryBlobConnectionString; i != nil { inputs["secondaryBlobConnectionString"] = i.ToStringOutput() }
		if i := state.SecondaryBlobEndpoint; i != nil { inputs["secondaryBlobEndpoint"] = i.ToStringOutput() }
		if i := state.SecondaryBlobHost; i != nil { inputs["secondaryBlobHost"] = i.ToStringOutput() }
		if i := state.SecondaryConnectionString; i != nil { inputs["secondaryConnectionString"] = i.ToStringOutput() }
		if i := state.SecondaryDfsEndpoint; i != nil { inputs["secondaryDfsEndpoint"] = i.ToStringOutput() }
		if i := state.SecondaryDfsHost; i != nil { inputs["secondaryDfsHost"] = i.ToStringOutput() }
		if i := state.SecondaryFileEndpoint; i != nil { inputs["secondaryFileEndpoint"] = i.ToStringOutput() }
		if i := state.SecondaryFileHost; i != nil { inputs["secondaryFileHost"] = i.ToStringOutput() }
		if i := state.SecondaryLocation; i != nil { inputs["secondaryLocation"] = i.ToStringOutput() }
		if i := state.SecondaryQueueEndpoint; i != nil { inputs["secondaryQueueEndpoint"] = i.ToStringOutput() }
		if i := state.SecondaryQueueHost; i != nil { inputs["secondaryQueueHost"] = i.ToStringOutput() }
		if i := state.SecondaryTableEndpoint; i != nil { inputs["secondaryTableEndpoint"] = i.ToStringOutput() }
		if i := state.SecondaryTableHost; i != nil { inputs["secondaryTableHost"] = i.ToStringOutput() }
		if i := state.SecondaryWebEndpoint; i != nil { inputs["secondaryWebEndpoint"] = i.ToStringOutput() }
		if i := state.SecondaryWebHost; i != nil { inputs["secondaryWebHost"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToStringMapOutput() }
	}
	var resource Account
	err := ctx.ReadResource("azure:storage/account:Account", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type AccountState struct {
	// Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
	AccessTier pulumi.StringInput `pulumi:"accessTier"`
	// The Encryption Source for this Storage Account. Possible values are `Microsoft.Keyvault` and `Microsoft.Storage`. Defaults to `Microsoft.Storage`.
	AccountEncryptionSource pulumi.StringInput `pulumi:"accountEncryptionSource"`
	// Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Changing this forces a new resource to be created. Defaults to `Storage`.
	AccountKind pulumi.StringInput `pulumi:"accountKind"`
	// Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
	AccountReplicationType pulumi.StringInput `pulumi:"accountReplicationType"`
	// Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
	AccountTier pulumi.StringInput `pulumi:"accountTier"`
	AccountType pulumi.StringInput `pulumi:"accountType"`
	// A `customDomain` block as documented below.
	CustomDomain AccountCustomDomainInput `pulumi:"customDomain"`
	// Boolean flag which controls if advanced threat protection is enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/common/storage-advanced-threat-protection) for more information. Defaults to `false`.
	EnableAdvancedThreatProtection pulumi.BoolInput `pulumi:"enableAdvancedThreatProtection"`
	// Boolean flag which controls if Encryption Services are enabled for Blob storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
	EnableBlobEncryption pulumi.BoolInput `pulumi:"enableBlobEncryption"`
	// Boolean flag which controls if Encryption Services are enabled for File storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
	EnableFileEncryption pulumi.BoolInput `pulumi:"enableFileEncryption"`
	// Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
	// for more information.
	EnableHttpsTrafficOnly pulumi.BoolInput `pulumi:"enableHttpsTrafficOnly"`
	// A `identity` block as defined below.
	Identity AccountIdentityInput `pulumi:"identity"`
	// Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
	IsHnsEnabled pulumi.BoolInput `pulumi:"isHnsEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// A `networkRules` block as documented below.
	NetworkRules AccountNetworkRulesInput `pulumi:"networkRules"`
	// The primary access key for the storage account.
	PrimaryAccessKey pulumi.StringInput `pulumi:"primaryAccessKey"`
	// The connection string associated with the primary blob location.
	PrimaryBlobConnectionString pulumi.StringInput `pulumi:"primaryBlobConnectionString"`
	// The endpoint URL for blob storage in the primary location.
	PrimaryBlobEndpoint pulumi.StringInput `pulumi:"primaryBlobEndpoint"`
	// The hostname with port if applicable for blob storage in the primary location.
	PrimaryBlobHost pulumi.StringInput `pulumi:"primaryBlobHost"`
	// The connection string associated with the primary location.
	PrimaryConnectionString pulumi.StringInput `pulumi:"primaryConnectionString"`
	// The endpoint URL for DFS storage in the primary location.
	PrimaryDfsEndpoint pulumi.StringInput `pulumi:"primaryDfsEndpoint"`
	// The hostname with port if applicable for DFS storage in the primary location.
	PrimaryDfsHost pulumi.StringInput `pulumi:"primaryDfsHost"`
	// The endpoint URL for file storage in the primary location.
	PrimaryFileEndpoint pulumi.StringInput `pulumi:"primaryFileEndpoint"`
	// The hostname with port if applicable for file storage in the primary location.
	PrimaryFileHost pulumi.StringInput `pulumi:"primaryFileHost"`
	// The primary location of the storage account.
	PrimaryLocation pulumi.StringInput `pulumi:"primaryLocation"`
	// The endpoint URL for queue storage in the primary location.
	PrimaryQueueEndpoint pulumi.StringInput `pulumi:"primaryQueueEndpoint"`
	// The hostname with port if applicable for queue storage in the primary location.
	PrimaryQueueHost pulumi.StringInput `pulumi:"primaryQueueHost"`
	// The endpoint URL for table storage in the primary location.
	PrimaryTableEndpoint pulumi.StringInput `pulumi:"primaryTableEndpoint"`
	// The hostname with port if applicable for table storage in the primary location.
	PrimaryTableHost pulumi.StringInput `pulumi:"primaryTableHost"`
	// The endpoint URL for web storage in the primary location.
	PrimaryWebEndpoint pulumi.StringInput `pulumi:"primaryWebEndpoint"`
	// The hostname with port if applicable for web storage in the primary location.
	PrimaryWebHost pulumi.StringInput `pulumi:"primaryWebHost"`
	// A `queueProperties` block as defined below.
	QueueProperties AccountQueuePropertiesInput `pulumi:"queueProperties"`
	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The secondary access key for the storage account.
	SecondaryAccessKey pulumi.StringInput `pulumi:"secondaryAccessKey"`
	// The connection string associated with the secondary blob location.
	SecondaryBlobConnectionString pulumi.StringInput `pulumi:"secondaryBlobConnectionString"`
	// The endpoint URL for blob storage in the secondary location.
	SecondaryBlobEndpoint pulumi.StringInput `pulumi:"secondaryBlobEndpoint"`
	// The hostname with port if applicable for blob storage in the secondary location.
	SecondaryBlobHost pulumi.StringInput `pulumi:"secondaryBlobHost"`
	// The connection string associated with the secondary location.
	SecondaryConnectionString pulumi.StringInput `pulumi:"secondaryConnectionString"`
	// The endpoint URL for DFS storage in the secondary location.
	SecondaryDfsEndpoint pulumi.StringInput `pulumi:"secondaryDfsEndpoint"`
	// The hostname with port if applicable for DFS storage in the secondary location.
	SecondaryDfsHost pulumi.StringInput `pulumi:"secondaryDfsHost"`
	// The endpoint URL for file storage in the secondary location.
	SecondaryFileEndpoint pulumi.StringInput `pulumi:"secondaryFileEndpoint"`
	// The hostname with port if applicable for file storage in the secondary location.
	SecondaryFileHost pulumi.StringInput `pulumi:"secondaryFileHost"`
	// The secondary location of the storage account.
	SecondaryLocation pulumi.StringInput `pulumi:"secondaryLocation"`
	// The endpoint URL for queue storage in the secondary location.
	SecondaryQueueEndpoint pulumi.StringInput `pulumi:"secondaryQueueEndpoint"`
	// The hostname with port if applicable for queue storage in the secondary location.
	SecondaryQueueHost pulumi.StringInput `pulumi:"secondaryQueueHost"`
	// The endpoint URL for table storage in the secondary location.
	SecondaryTableEndpoint pulumi.StringInput `pulumi:"secondaryTableEndpoint"`
	// The hostname with port if applicable for table storage in the secondary location.
	SecondaryTableHost pulumi.StringInput `pulumi:"secondaryTableHost"`
	// The endpoint URL for web storage in the secondary location.
	SecondaryWebEndpoint pulumi.StringInput `pulumi:"secondaryWebEndpoint"`
	// The hostname with port if applicable for web storage in the secondary location.
	SecondaryWebHost pulumi.StringInput `pulumi:"secondaryWebHost"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
	AccessTier pulumi.StringInput `pulumi:"accessTier"`
	// The Encryption Source for this Storage Account. Possible values are `Microsoft.Keyvault` and `Microsoft.Storage`. Defaults to `Microsoft.Storage`.
	AccountEncryptionSource pulumi.StringInput `pulumi:"accountEncryptionSource"`
	// Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Changing this forces a new resource to be created. Defaults to `Storage`.
	AccountKind pulumi.StringInput `pulumi:"accountKind"`
	// Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
	AccountReplicationType pulumi.StringInput `pulumi:"accountReplicationType"`
	// Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
	AccountTier pulumi.StringInput `pulumi:"accountTier"`
	AccountType pulumi.StringInput `pulumi:"accountType"`
	// A `customDomain` block as documented below.
	CustomDomain AccountCustomDomainInput `pulumi:"customDomain"`
	// Boolean flag which controls if advanced threat protection is enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/common/storage-advanced-threat-protection) for more information. Defaults to `false`.
	EnableAdvancedThreatProtection pulumi.BoolInput `pulumi:"enableAdvancedThreatProtection"`
	// Boolean flag which controls if Encryption Services are enabled for Blob storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
	EnableBlobEncryption pulumi.BoolInput `pulumi:"enableBlobEncryption"`
	// Boolean flag which controls if Encryption Services are enabled for File storage, see [here](https://azure.microsoft.com/en-us/documentation/articles/storage-service-encryption/) for more information. Defaults to `true`.
	EnableFileEncryption pulumi.BoolInput `pulumi:"enableFileEncryption"`
	// Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
	// for more information.
	EnableHttpsTrafficOnly pulumi.BoolInput `pulumi:"enableHttpsTrafficOnly"`
	// A `identity` block as defined below.
	Identity AccountIdentityInput `pulumi:"identity"`
	// Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
	IsHnsEnabled pulumi.BoolInput `pulumi:"isHnsEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	Name pulumi.StringInput `pulumi:"name"`
	// A `networkRules` block as documented below.
	NetworkRules AccountNetworkRulesInput `pulumi:"networkRules"`
	// A `queueProperties` block as defined below.
	QueueProperties AccountQueuePropertiesInput `pulumi:"queueProperties"`
	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}
type AccountCustomDomain struct {
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	Name string `pulumi:"name"`
	UseSubdomain *bool `pulumi:"useSubdomain"`
}
var accountCustomDomainType = reflect.TypeOf((*AccountCustomDomain)(nil)).Elem()

type AccountCustomDomainInput interface {
	pulumi.Input

	ToAccountCustomDomainOutput() AccountCustomDomainOutput
	ToAccountCustomDomainOutputWithContext(ctx context.Context) AccountCustomDomainOutput
}

type AccountCustomDomainArgs struct {
	// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
	Name pulumi.StringInput `pulumi:"name"`
	UseSubdomain pulumi.BoolInput `pulumi:"useSubdomain"`
}

func (AccountCustomDomainArgs) ElementType() reflect.Type {
	return accountCustomDomainType
}

func (a AccountCustomDomainArgs) ToAccountCustomDomainOutput() AccountCustomDomainOutput {
	return pulumi.ToOutput(a).(AccountCustomDomainOutput)
}

func (a AccountCustomDomainArgs) ToAccountCustomDomainOutputWithContext(ctx context.Context) AccountCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountCustomDomainOutput)
}

type AccountCustomDomainOutput struct { *pulumi.OutputState }

// Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
func (o AccountCustomDomainOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v AccountCustomDomain) string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (o AccountCustomDomainOutput) UseSubdomain() pulumi.BoolOutput {
	return o.Apply(func(v AccountCustomDomain) bool {
		if v.UseSubdomain == nil { return *new(bool) } else { return *v.UseSubdomain }
	}).(pulumi.BoolOutput)
}

func (AccountCustomDomainOutput) ElementType() reflect.Type {
	return accountCustomDomainType
}

func (o AccountCustomDomainOutput) ToAccountCustomDomainOutput() AccountCustomDomainOutput {
	return o
}

func (o AccountCustomDomainOutput) ToAccountCustomDomainOutputWithContext(ctx context.Context) AccountCustomDomainOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountCustomDomainOutput{}) }

type AccountIdentity struct {
	// The Principal ID for the Service Principal associated with the Identity of this Storage Account.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
	TenantId *string `pulumi:"tenantId"`
	Type string `pulumi:"type"`
}
var accountIdentityType = reflect.TypeOf((*AccountIdentity)(nil)).Elem()

type AccountIdentityInput interface {
	pulumi.Input

	ToAccountIdentityOutput() AccountIdentityOutput
	ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput
}

type AccountIdentityArgs struct {
	// The Principal ID for the Service Principal associated with the Identity of this Storage Account.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountIdentityArgs) ElementType() reflect.Type {
	return accountIdentityType
}

func (a AccountIdentityArgs) ToAccountIdentityOutput() AccountIdentityOutput {
	return pulumi.ToOutput(a).(AccountIdentityOutput)
}

func (a AccountIdentityArgs) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountIdentityOutput)
}

type AccountIdentityOutput struct { *pulumi.OutputState }

// The Principal ID for the Service Principal associated with the Identity of this Storage Account.
func (o AccountIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.Apply(func(v AccountIdentity) string {
		if v.PrincipalId == nil { return *new(string) } else { return *v.PrincipalId }
	}).(pulumi.StringOutput)
}

// The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
func (o AccountIdentityOutput) TenantId() pulumi.StringOutput {
	return o.Apply(func(v AccountIdentity) string {
		if v.TenantId == nil { return *new(string) } else { return *v.TenantId }
	}).(pulumi.StringOutput)
}

func (o AccountIdentityOutput) Type() pulumi.StringOutput {
	return o.Apply(func(v AccountIdentity) string {
		return v.Type
	}).(pulumi.StringOutput)
}

func (AccountIdentityOutput) ElementType() reflect.Type {
	return accountIdentityType
}

func (o AccountIdentityOutput) ToAccountIdentityOutput() AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountIdentityOutput{}) }

type AccountNetworkRules struct {
	Bypasses *[]string `pulumi:"bypasses"`
	DefaultAction string `pulumi:"defaultAction"`
	IpRules *[]string `pulumi:"ipRules"`
	VirtualNetworkSubnetIds *[]string `pulumi:"virtualNetworkSubnetIds"`
}
var accountNetworkRulesType = reflect.TypeOf((*AccountNetworkRules)(nil)).Elem()

type AccountNetworkRulesInput interface {
	pulumi.Input

	ToAccountNetworkRulesOutput() AccountNetworkRulesOutput
	ToAccountNetworkRulesOutputWithContext(ctx context.Context) AccountNetworkRulesOutput
}

type AccountNetworkRulesArgs struct {
	Bypasses pulumi.StringArrayInput `pulumi:"bypasses"`
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	IpRules pulumi.StringArrayInput `pulumi:"ipRules"`
	VirtualNetworkSubnetIds pulumi.StringArrayInput `pulumi:"virtualNetworkSubnetIds"`
}

func (AccountNetworkRulesArgs) ElementType() reflect.Type {
	return accountNetworkRulesType
}

func (a AccountNetworkRulesArgs) ToAccountNetworkRulesOutput() AccountNetworkRulesOutput {
	return pulumi.ToOutput(a).(AccountNetworkRulesOutput)
}

func (a AccountNetworkRulesArgs) ToAccountNetworkRulesOutputWithContext(ctx context.Context) AccountNetworkRulesOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountNetworkRulesOutput)
}

type AccountNetworkRulesOutput struct { *pulumi.OutputState }

func (o AccountNetworkRulesOutput) Bypasses() pulumi.StringArrayOutput {
	return o.Apply(func(v AccountNetworkRules) []string {
		if v.Bypasses == nil { return *new([]string) } else { return *v.Bypasses }
	}).(pulumi.StringArrayOutput)
}

func (o AccountNetworkRulesOutput) DefaultAction() pulumi.StringOutput {
	return o.Apply(func(v AccountNetworkRules) string {
		return v.DefaultAction
	}).(pulumi.StringOutput)
}

func (o AccountNetworkRulesOutput) IpRules() pulumi.StringArrayOutput {
	return o.Apply(func(v AccountNetworkRules) []string {
		if v.IpRules == nil { return *new([]string) } else { return *v.IpRules }
	}).(pulumi.StringArrayOutput)
}

func (o AccountNetworkRulesOutput) VirtualNetworkSubnetIds() pulumi.StringArrayOutput {
	return o.Apply(func(v AccountNetworkRules) []string {
		if v.VirtualNetworkSubnetIds == nil { return *new([]string) } else { return *v.VirtualNetworkSubnetIds }
	}).(pulumi.StringArrayOutput)
}

func (AccountNetworkRulesOutput) ElementType() reflect.Type {
	return accountNetworkRulesType
}

func (o AccountNetworkRulesOutput) ToAccountNetworkRulesOutput() AccountNetworkRulesOutput {
	return o
}

func (o AccountNetworkRulesOutput) ToAccountNetworkRulesOutputWithContext(ctx context.Context) AccountNetworkRulesOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountNetworkRulesOutput{}) }

type AccountQueueProperties struct {
	CorsRules *[]AccountQueuePropertiesCorsRules `pulumi:"corsRules"`
	HourMetrics *AccountQueuePropertiesHourMetrics `pulumi:"hourMetrics"`
	Logging *AccountQueuePropertiesLogging `pulumi:"logging"`
	MinuteMetrics *AccountQueuePropertiesMinuteMetrics `pulumi:"minuteMetrics"`
}
var accountQueuePropertiesType = reflect.TypeOf((*AccountQueueProperties)(nil)).Elem()

type AccountQueuePropertiesInput interface {
	pulumi.Input

	ToAccountQueuePropertiesOutput() AccountQueuePropertiesOutput
	ToAccountQueuePropertiesOutputWithContext(ctx context.Context) AccountQueuePropertiesOutput
}

type AccountQueuePropertiesArgs struct {
	CorsRules AccountQueuePropertiesCorsRulesArrayInput `pulumi:"corsRules"`
	HourMetrics AccountQueuePropertiesHourMetricsInput `pulumi:"hourMetrics"`
	Logging AccountQueuePropertiesLoggingInput `pulumi:"logging"`
	MinuteMetrics AccountQueuePropertiesMinuteMetricsInput `pulumi:"minuteMetrics"`
}

func (AccountQueuePropertiesArgs) ElementType() reflect.Type {
	return accountQueuePropertiesType
}

func (a AccountQueuePropertiesArgs) ToAccountQueuePropertiesOutput() AccountQueuePropertiesOutput {
	return pulumi.ToOutput(a).(AccountQueuePropertiesOutput)
}

func (a AccountQueuePropertiesArgs) ToAccountQueuePropertiesOutputWithContext(ctx context.Context) AccountQueuePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountQueuePropertiesOutput)
}

type AccountQueuePropertiesOutput struct { *pulumi.OutputState }

func (o AccountQueuePropertiesOutput) CorsRules() AccountQueuePropertiesCorsRulesArrayOutput {
	return o.Apply(func(v AccountQueueProperties) []AccountQueuePropertiesCorsRules {
		if v.CorsRules == nil { return *new([]AccountQueuePropertiesCorsRules) } else { return *v.CorsRules }
	}).(AccountQueuePropertiesCorsRulesArrayOutput)
}

func (o AccountQueuePropertiesOutput) HourMetrics() AccountQueuePropertiesHourMetricsOutput {
	return o.Apply(func(v AccountQueueProperties) AccountQueuePropertiesHourMetrics {
		if v.HourMetrics == nil { return *new(AccountQueuePropertiesHourMetrics) } else { return *v.HourMetrics }
	}).(AccountQueuePropertiesHourMetricsOutput)
}

func (o AccountQueuePropertiesOutput) Logging() AccountQueuePropertiesLoggingOutput {
	return o.Apply(func(v AccountQueueProperties) AccountQueuePropertiesLogging {
		if v.Logging == nil { return *new(AccountQueuePropertiesLogging) } else { return *v.Logging }
	}).(AccountQueuePropertiesLoggingOutput)
}

func (o AccountQueuePropertiesOutput) MinuteMetrics() AccountQueuePropertiesMinuteMetricsOutput {
	return o.Apply(func(v AccountQueueProperties) AccountQueuePropertiesMinuteMetrics {
		if v.MinuteMetrics == nil { return *new(AccountQueuePropertiesMinuteMetrics) } else { return *v.MinuteMetrics }
	}).(AccountQueuePropertiesMinuteMetricsOutput)
}

func (AccountQueuePropertiesOutput) ElementType() reflect.Type {
	return accountQueuePropertiesType
}

func (o AccountQueuePropertiesOutput) ToAccountQueuePropertiesOutput() AccountQueuePropertiesOutput {
	return o
}

func (o AccountQueuePropertiesOutput) ToAccountQueuePropertiesOutputWithContext(ctx context.Context) AccountQueuePropertiesOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountQueuePropertiesOutput{}) }

type AccountQueuePropertiesCorsRules struct {
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	AllowedMethods []string `pulumi:"allowedMethods"`
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}
var accountQueuePropertiesCorsRulesType = reflect.TypeOf((*AccountQueuePropertiesCorsRules)(nil)).Elem()

type AccountQueuePropertiesCorsRulesInput interface {
	pulumi.Input

	ToAccountQueuePropertiesCorsRulesOutput() AccountQueuePropertiesCorsRulesOutput
	ToAccountQueuePropertiesCorsRulesOutputWithContext(ctx context.Context) AccountQueuePropertiesCorsRulesOutput
}

type AccountQueuePropertiesCorsRulesArgs struct {
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	ExposedHeaders pulumi.StringArrayInput `pulumi:"exposedHeaders"`
	MaxAgeInSeconds pulumi.IntInput `pulumi:"maxAgeInSeconds"`
}

func (AccountQueuePropertiesCorsRulesArgs) ElementType() reflect.Type {
	return accountQueuePropertiesCorsRulesType
}

func (a AccountQueuePropertiesCorsRulesArgs) ToAccountQueuePropertiesCorsRulesOutput() AccountQueuePropertiesCorsRulesOutput {
	return pulumi.ToOutput(a).(AccountQueuePropertiesCorsRulesOutput)
}

func (a AccountQueuePropertiesCorsRulesArgs) ToAccountQueuePropertiesCorsRulesOutputWithContext(ctx context.Context) AccountQueuePropertiesCorsRulesOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountQueuePropertiesCorsRulesOutput)
}

type AccountQueuePropertiesCorsRulesOutput struct { *pulumi.OutputState }

func (o AccountQueuePropertiesCorsRulesOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.Apply(func(v AccountQueuePropertiesCorsRules) []string {
		return v.AllowedHeaders
	}).(pulumi.StringArrayOutput)
}

func (o AccountQueuePropertiesCorsRulesOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.Apply(func(v AccountQueuePropertiesCorsRules) []string {
		return v.AllowedMethods
	}).(pulumi.StringArrayOutput)
}

func (o AccountQueuePropertiesCorsRulesOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.Apply(func(v AccountQueuePropertiesCorsRules) []string {
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

func (o AccountQueuePropertiesCorsRulesOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.Apply(func(v AccountQueuePropertiesCorsRules) []string {
		return v.ExposedHeaders
	}).(pulumi.StringArrayOutput)
}

func (o AccountQueuePropertiesCorsRulesOutput) MaxAgeInSeconds() pulumi.IntOutput {
	return o.Apply(func(v AccountQueuePropertiesCorsRules) int {
		return v.MaxAgeInSeconds
	}).(pulumi.IntOutput)
}

func (AccountQueuePropertiesCorsRulesOutput) ElementType() reflect.Type {
	return accountQueuePropertiesCorsRulesType
}

func (o AccountQueuePropertiesCorsRulesOutput) ToAccountQueuePropertiesCorsRulesOutput() AccountQueuePropertiesCorsRulesOutput {
	return o
}

func (o AccountQueuePropertiesCorsRulesOutput) ToAccountQueuePropertiesCorsRulesOutputWithContext(ctx context.Context) AccountQueuePropertiesCorsRulesOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountQueuePropertiesCorsRulesOutput{}) }

var accountQueuePropertiesCorsRulesArrayType = reflect.TypeOf((*[]AccountQueuePropertiesCorsRules)(nil)).Elem()

type AccountQueuePropertiesCorsRulesArrayInput interface {
	pulumi.Input

	ToAccountQueuePropertiesCorsRulesArrayOutput() AccountQueuePropertiesCorsRulesArrayOutput
	ToAccountQueuePropertiesCorsRulesArrayOutputWithContext(ctx context.Context) AccountQueuePropertiesCorsRulesArrayOutput
}

type AccountQueuePropertiesCorsRulesArrayArgs []AccountQueuePropertiesCorsRulesInput

func (AccountQueuePropertiesCorsRulesArrayArgs) ElementType() reflect.Type {
	return accountQueuePropertiesCorsRulesArrayType
}

func (a AccountQueuePropertiesCorsRulesArrayArgs) ToAccountQueuePropertiesCorsRulesArrayOutput() AccountQueuePropertiesCorsRulesArrayOutput {
	return pulumi.ToOutput(a).(AccountQueuePropertiesCorsRulesArrayOutput)
}

func (a AccountQueuePropertiesCorsRulesArrayArgs) ToAccountQueuePropertiesCorsRulesArrayOutputWithContext(ctx context.Context) AccountQueuePropertiesCorsRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountQueuePropertiesCorsRulesArrayOutput)
}

type AccountQueuePropertiesCorsRulesArrayOutput struct { *pulumi.OutputState }

func (o AccountQueuePropertiesCorsRulesArrayOutput) Index(i pulumi.IntInput) AccountQueuePropertiesCorsRulesOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) AccountQueuePropertiesCorsRules {
		return vs[0].([]AccountQueuePropertiesCorsRules)[vs[1].(int)]
	}).(AccountQueuePropertiesCorsRulesOutput)
}

func (AccountQueuePropertiesCorsRulesArrayOutput) ElementType() reflect.Type {
	return accountQueuePropertiesCorsRulesArrayType
}

func (o AccountQueuePropertiesCorsRulesArrayOutput) ToAccountQueuePropertiesCorsRulesArrayOutput() AccountQueuePropertiesCorsRulesArrayOutput {
	return o
}

func (o AccountQueuePropertiesCorsRulesArrayOutput) ToAccountQueuePropertiesCorsRulesArrayOutputWithContext(ctx context.Context) AccountQueuePropertiesCorsRulesArrayOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountQueuePropertiesCorsRulesArrayOutput{}) }

type AccountQueuePropertiesHourMetrics struct {
	Enabled bool `pulumi:"enabled"`
	IncludeApis *bool `pulumi:"includeApis"`
	RetentionPolicyDays *int `pulumi:"retentionPolicyDays"`
	Version string `pulumi:"version"`
}
var accountQueuePropertiesHourMetricsType = reflect.TypeOf((*AccountQueuePropertiesHourMetrics)(nil)).Elem()

type AccountQueuePropertiesHourMetricsInput interface {
	pulumi.Input

	ToAccountQueuePropertiesHourMetricsOutput() AccountQueuePropertiesHourMetricsOutput
	ToAccountQueuePropertiesHourMetricsOutputWithContext(ctx context.Context) AccountQueuePropertiesHourMetricsOutput
}

type AccountQueuePropertiesHourMetricsArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	IncludeApis pulumi.BoolInput `pulumi:"includeApis"`
	RetentionPolicyDays pulumi.IntInput `pulumi:"retentionPolicyDays"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (AccountQueuePropertiesHourMetricsArgs) ElementType() reflect.Type {
	return accountQueuePropertiesHourMetricsType
}

func (a AccountQueuePropertiesHourMetricsArgs) ToAccountQueuePropertiesHourMetricsOutput() AccountQueuePropertiesHourMetricsOutput {
	return pulumi.ToOutput(a).(AccountQueuePropertiesHourMetricsOutput)
}

func (a AccountQueuePropertiesHourMetricsArgs) ToAccountQueuePropertiesHourMetricsOutputWithContext(ctx context.Context) AccountQueuePropertiesHourMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountQueuePropertiesHourMetricsOutput)
}

type AccountQueuePropertiesHourMetricsOutput struct { *pulumi.OutputState }

func (o AccountQueuePropertiesHourMetricsOutput) Enabled() pulumi.BoolOutput {
	return o.Apply(func(v AccountQueuePropertiesHourMetrics) bool {
		return v.Enabled
	}).(pulumi.BoolOutput)
}

func (o AccountQueuePropertiesHourMetricsOutput) IncludeApis() pulumi.BoolOutput {
	return o.Apply(func(v AccountQueuePropertiesHourMetrics) bool {
		if v.IncludeApis == nil { return *new(bool) } else { return *v.IncludeApis }
	}).(pulumi.BoolOutput)
}

func (o AccountQueuePropertiesHourMetricsOutput) RetentionPolicyDays() pulumi.IntOutput {
	return o.Apply(func(v AccountQueuePropertiesHourMetrics) int {
		if v.RetentionPolicyDays == nil { return *new(int) } else { return *v.RetentionPolicyDays }
	}).(pulumi.IntOutput)
}

func (o AccountQueuePropertiesHourMetricsOutput) Version() pulumi.StringOutput {
	return o.Apply(func(v AccountQueuePropertiesHourMetrics) string {
		return v.Version
	}).(pulumi.StringOutput)
}

func (AccountQueuePropertiesHourMetricsOutput) ElementType() reflect.Type {
	return accountQueuePropertiesHourMetricsType
}

func (o AccountQueuePropertiesHourMetricsOutput) ToAccountQueuePropertiesHourMetricsOutput() AccountQueuePropertiesHourMetricsOutput {
	return o
}

func (o AccountQueuePropertiesHourMetricsOutput) ToAccountQueuePropertiesHourMetricsOutputWithContext(ctx context.Context) AccountQueuePropertiesHourMetricsOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountQueuePropertiesHourMetricsOutput{}) }

type AccountQueuePropertiesLogging struct {
	Delete bool `pulumi:"delete"`
	Read bool `pulumi:"read"`
	RetentionPolicyDays *int `pulumi:"retentionPolicyDays"`
	Version string `pulumi:"version"`
	Write bool `pulumi:"write"`
}
var accountQueuePropertiesLoggingType = reflect.TypeOf((*AccountQueuePropertiesLogging)(nil)).Elem()

type AccountQueuePropertiesLoggingInput interface {
	pulumi.Input

	ToAccountQueuePropertiesLoggingOutput() AccountQueuePropertiesLoggingOutput
	ToAccountQueuePropertiesLoggingOutputWithContext(ctx context.Context) AccountQueuePropertiesLoggingOutput
}

type AccountQueuePropertiesLoggingArgs struct {
	Delete pulumi.BoolInput `pulumi:"delete"`
	Read pulumi.BoolInput `pulumi:"read"`
	RetentionPolicyDays pulumi.IntInput `pulumi:"retentionPolicyDays"`
	Version pulumi.StringInput `pulumi:"version"`
	Write pulumi.BoolInput `pulumi:"write"`
}

func (AccountQueuePropertiesLoggingArgs) ElementType() reflect.Type {
	return accountQueuePropertiesLoggingType
}

func (a AccountQueuePropertiesLoggingArgs) ToAccountQueuePropertiesLoggingOutput() AccountQueuePropertiesLoggingOutput {
	return pulumi.ToOutput(a).(AccountQueuePropertiesLoggingOutput)
}

func (a AccountQueuePropertiesLoggingArgs) ToAccountQueuePropertiesLoggingOutputWithContext(ctx context.Context) AccountQueuePropertiesLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountQueuePropertiesLoggingOutput)
}

type AccountQueuePropertiesLoggingOutput struct { *pulumi.OutputState }

func (o AccountQueuePropertiesLoggingOutput) Delete() pulumi.BoolOutput {
	return o.Apply(func(v AccountQueuePropertiesLogging) bool {
		return v.Delete
	}).(pulumi.BoolOutput)
}

func (o AccountQueuePropertiesLoggingOutput) Read() pulumi.BoolOutput {
	return o.Apply(func(v AccountQueuePropertiesLogging) bool {
		return v.Read
	}).(pulumi.BoolOutput)
}

func (o AccountQueuePropertiesLoggingOutput) RetentionPolicyDays() pulumi.IntOutput {
	return o.Apply(func(v AccountQueuePropertiesLogging) int {
		if v.RetentionPolicyDays == nil { return *new(int) } else { return *v.RetentionPolicyDays }
	}).(pulumi.IntOutput)
}

func (o AccountQueuePropertiesLoggingOutput) Version() pulumi.StringOutput {
	return o.Apply(func(v AccountQueuePropertiesLogging) string {
		return v.Version
	}).(pulumi.StringOutput)
}

func (o AccountQueuePropertiesLoggingOutput) Write() pulumi.BoolOutput {
	return o.Apply(func(v AccountQueuePropertiesLogging) bool {
		return v.Write
	}).(pulumi.BoolOutput)
}

func (AccountQueuePropertiesLoggingOutput) ElementType() reflect.Type {
	return accountQueuePropertiesLoggingType
}

func (o AccountQueuePropertiesLoggingOutput) ToAccountQueuePropertiesLoggingOutput() AccountQueuePropertiesLoggingOutput {
	return o
}

func (o AccountQueuePropertiesLoggingOutput) ToAccountQueuePropertiesLoggingOutputWithContext(ctx context.Context) AccountQueuePropertiesLoggingOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountQueuePropertiesLoggingOutput{}) }

type AccountQueuePropertiesMinuteMetrics struct {
	Enabled bool `pulumi:"enabled"`
	IncludeApis *bool `pulumi:"includeApis"`
	RetentionPolicyDays *int `pulumi:"retentionPolicyDays"`
	Version string `pulumi:"version"`
}
var accountQueuePropertiesMinuteMetricsType = reflect.TypeOf((*AccountQueuePropertiesMinuteMetrics)(nil)).Elem()

type AccountQueuePropertiesMinuteMetricsInput interface {
	pulumi.Input

	ToAccountQueuePropertiesMinuteMetricsOutput() AccountQueuePropertiesMinuteMetricsOutput
	ToAccountQueuePropertiesMinuteMetricsOutputWithContext(ctx context.Context) AccountQueuePropertiesMinuteMetricsOutput
}

type AccountQueuePropertiesMinuteMetricsArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	IncludeApis pulumi.BoolInput `pulumi:"includeApis"`
	RetentionPolicyDays pulumi.IntInput `pulumi:"retentionPolicyDays"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (AccountQueuePropertiesMinuteMetricsArgs) ElementType() reflect.Type {
	return accountQueuePropertiesMinuteMetricsType
}

func (a AccountQueuePropertiesMinuteMetricsArgs) ToAccountQueuePropertiesMinuteMetricsOutput() AccountQueuePropertiesMinuteMetricsOutput {
	return pulumi.ToOutput(a).(AccountQueuePropertiesMinuteMetricsOutput)
}

func (a AccountQueuePropertiesMinuteMetricsArgs) ToAccountQueuePropertiesMinuteMetricsOutputWithContext(ctx context.Context) AccountQueuePropertiesMinuteMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(AccountQueuePropertiesMinuteMetricsOutput)
}

type AccountQueuePropertiesMinuteMetricsOutput struct { *pulumi.OutputState }

func (o AccountQueuePropertiesMinuteMetricsOutput) Enabled() pulumi.BoolOutput {
	return o.Apply(func(v AccountQueuePropertiesMinuteMetrics) bool {
		return v.Enabled
	}).(pulumi.BoolOutput)
}

func (o AccountQueuePropertiesMinuteMetricsOutput) IncludeApis() pulumi.BoolOutput {
	return o.Apply(func(v AccountQueuePropertiesMinuteMetrics) bool {
		if v.IncludeApis == nil { return *new(bool) } else { return *v.IncludeApis }
	}).(pulumi.BoolOutput)
}

func (o AccountQueuePropertiesMinuteMetricsOutput) RetentionPolicyDays() pulumi.IntOutput {
	return o.Apply(func(v AccountQueuePropertiesMinuteMetrics) int {
		if v.RetentionPolicyDays == nil { return *new(int) } else { return *v.RetentionPolicyDays }
	}).(pulumi.IntOutput)
}

func (o AccountQueuePropertiesMinuteMetricsOutput) Version() pulumi.StringOutput {
	return o.Apply(func(v AccountQueuePropertiesMinuteMetrics) string {
		return v.Version
	}).(pulumi.StringOutput)
}

func (AccountQueuePropertiesMinuteMetricsOutput) ElementType() reflect.Type {
	return accountQueuePropertiesMinuteMetricsType
}

func (o AccountQueuePropertiesMinuteMetricsOutput) ToAccountQueuePropertiesMinuteMetricsOutput() AccountQueuePropertiesMinuteMetricsOutput {
	return o
}

func (o AccountQueuePropertiesMinuteMetricsOutput) ToAccountQueuePropertiesMinuteMetricsOutputWithContext(ctx context.Context) AccountQueuePropertiesMinuteMetricsOutput {
	return o
}

func init() { pulumi.RegisterOutputType(AccountQueuePropertiesMinuteMetricsOutput{}) }

