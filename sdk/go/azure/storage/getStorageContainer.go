// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storage

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing Storage Container.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/storage_container.html.markdown.
func LookupStorageContainer(ctx *pulumi.Context, args *GetStorageContainerArgs) (*GetStorageContainerResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["metadata"] = args.Metadata
		inputs["name"] = args.Name
		inputs["storageAccountName"] = args.StorageAccountName
	}
	outputs, err := ctx.Invoke("azure:storage/getStorageContainer:getStorageContainer", inputs)
	if err != nil {
		return nil, err
	}
	return &GetStorageContainerResult{
		ContainerAccessType: outputs["containerAccessType"],
		HasImmutabilityPolicy: outputs["hasImmutabilityPolicy"],
		HasLegalHold: outputs["hasLegalHold"],
		Metadata: outputs["metadata"],
		Name: outputs["name"],
		StorageAccountName: outputs["storageAccountName"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getStorageContainer.
type GetStorageContainerArgs struct {
	Metadata interface{}
	// The name of the Container.
	Name interface{}
	// The name of the Storage Account where the Container was created.
	StorageAccountName interface{}
}

// A collection of values returned by getStorageContainer.
type GetStorageContainerResult struct {
	// The Access Level configured for this Container.
	ContainerAccessType interface{}
	// Is there an Immutability Policy configured on this Storage Container?
	HasImmutabilityPolicy interface{}
	// Is there a Legal Hold configured on this Storage Container?
	HasLegalHold interface{}
	// A mapping of MetaData for this Container.
	Metadata interface{}
	Name interface{}
	StorageAccountName interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
