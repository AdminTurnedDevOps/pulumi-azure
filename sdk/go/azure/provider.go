// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The provider type for the azurerm package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/index.html.markdown.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	inputs := map[string]pulumi.Input{}
	inputs["clientCertificatePassword"] = pulumi.Any(getEnvOrDefault("", nil, "AZURE_CLIENT_CERTIFICATE_PASSWORD", "ARM_CLIENT_CERTIFICATE_PASSWORD"))
	inputs["clientCertificatePath"] = pulumi.Any(getEnvOrDefault("", nil, "AZURE_CLIENT_CERTIFICATE_PATH", "ARM_CLIENT_CERTIFICATE_PATH"))
	inputs["clientId"] = pulumi.Any(getEnvOrDefault("", nil, "AZURE_CLIENT_ID", "ARM_CLIENT_ID"))
	inputs["clientSecret"] = pulumi.Any(getEnvOrDefault("", nil, "AZURE_CLIENT_SECRET", "ARM_CLIENT_SECRET"))
	inputs["disableTerraformPartnerId"] = pulumi.Any(getEnvOrDefault(true, parseEnvBool, "ARM_DISABLE_TERRAFORM_PARTNER_ID"))
	inputs["environment"] = pulumi.Any(getEnvOrDefault("public", nil, "AZURE_ENVIRONMENT", "ARM_ENVIRONMENT"))
	inputs["msiEndpoint"] = pulumi.Any(getEnvOrDefault("", nil, "ARM_MSI_ENDPOINT"))
	inputs["partnerId"] = pulumi.Any(getEnvOrDefault("", nil, "ARM_PARTNER_ID"))
	inputs["skipCredentialsValidation"] = pulumi.Any(getEnvOrDefault(false, parseEnvBool, "ARM_SKIP_CREDENTIALS_VALIDATION"))
	inputs["skipProviderRegistration"] = pulumi.Any(getEnvOrDefault(false, parseEnvBool, "ARM_SKIP_PROVIDER_REGISTRATION"))
	inputs["subscriptionId"] = pulumi.Any(getEnvOrDefault("", nil, "ARM_SUBSCRIPTION_ID"))
	inputs["tenantId"] = pulumi.Any(getEnvOrDefault("", nil, "AZURE_TENANT_ID", "ARM_TENANT_ID"))
	inputs["useMsi"] = pulumi.Any(getEnvOrDefault(false, parseEnvBool, "ARM_USE_MSI"))
	if args != nil {
		if i := args.AuxiliaryTenantIds; i != nil { inputs["auxiliaryTenantIds"] = i.ToStringArrayOutput() }
		if i := args.ClientCertificatePassword; i != nil { inputs["clientCertificatePassword"] = i.ToStringOutput() }
		if i := args.ClientCertificatePath; i != nil { inputs["clientCertificatePath"] = i.ToStringOutput() }
		if i := args.ClientId; i != nil { inputs["clientId"] = i.ToStringOutput() }
		if i := args.ClientSecret; i != nil { inputs["clientSecret"] = i.ToStringOutput() }
		if i := args.DisableCorrelationRequestId; i != nil { inputs["disableCorrelationRequestId"] = i.ToBoolOutput() }
		if i := args.DisableTerraformPartnerId; i != nil { inputs["disableTerraformPartnerId"] = i.ToBoolOutput() }
		if i := args.Environment; i != nil { inputs["environment"] = i.ToStringOutput() }
		if i := args.MsiEndpoint; i != nil { inputs["msiEndpoint"] = i.ToStringOutput() }
		if i := args.PartnerId; i != nil { inputs["partnerId"] = i.ToStringOutput() }
		if i := args.SkipCredentialsValidation; i != nil { inputs["skipCredentialsValidation"] = i.ToBoolOutput() }
		if i := args.SkipProviderRegistration; i != nil { inputs["skipProviderRegistration"] = i.ToBoolOutput() }
		if i := args.SubscriptionId; i != nil { inputs["subscriptionId"] = i.ToStringOutput() }
		if i := args.TenantId; i != nil { inputs["tenantId"] = i.ToStringOutput() }
		if i := args.UseMsi; i != nil { inputs["useMsi"] = i.ToBoolOutput() }
	}
	var resource Provider
	err := ctx.RegisterResource("azure", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	AuxiliaryTenantIds pulumi.StringArrayInput `pulumi:"auxiliaryTenantIds"`
	// The password associated with the Client Certificate. For use when authenticating as a Service Principal using a Client
	// Certificate
	ClientCertificatePassword pulumi.StringInput `pulumi:"clientCertificatePassword"`
	// The path to the Client Certificate associated with the Service Principal for use when authenticating as a Service
	// Principal using a Client Certificate.
	ClientCertificatePath pulumi.StringInput `pulumi:"clientCertificatePath"`
	// The Client ID which should be used.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The Client Secret which should be used. For use When authenticating as a Service Principal using a Client Secret.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// This will disable the x-ms-correlation-request-id header.
	DisableCorrelationRequestId pulumi.BoolInput `pulumi:"disableCorrelationRequestId"`
	// This will disable the Terraform Partner ID which is used if a custom `partner_id` isn't specified.
	DisableTerraformPartnerId pulumi.BoolInput `pulumi:"disableTerraformPartnerId"`
	// The Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults to
	// public.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The path to a custom endpoint for Managed Service Identity - in most circumstances this should be detected
	// automatically.
	MsiEndpoint pulumi.StringInput `pulumi:"msiEndpoint"`
	// A GUID/UUID that is registered with Microsoft to facilitate partner resource usage attribution.
	PartnerId pulumi.StringInput `pulumi:"partnerId"`
	// This will cause the AzureRM Provider to skip verifying the credentials being used are valid.
	SkipCredentialsValidation pulumi.BoolInput `pulumi:"skipCredentialsValidation"`
	// Should the AzureRM Provider skip registering all of the Resource Providers that it supports, if they're not already
	// registered?
	SkipProviderRegistration pulumi.BoolInput `pulumi:"skipProviderRegistration"`
	// The Subscription ID which should be used.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// The Tenant ID which should be used.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Allowed Managed Service Identity be used for Authentication.
	UseMsi pulumi.BoolInput `pulumi:"useMsi"`
}
