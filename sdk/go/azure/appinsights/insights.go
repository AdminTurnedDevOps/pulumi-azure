// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appinsights

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an Application Insights component.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/application_insights.html.markdown.
type Insights struct {
	pulumi.CustomResourceState

	// The App ID associated with this Application Insights component.
	AppId pulumi.StringOutput `pulumi:"appId"`

	// Specifies the type of Application Insights to create. Valid values are `ios` for _iOS_, `java` for _Java web_, `MobileCenter` for _App Center_, `Node.JS` for _Node.js_, `other` for _General_, `phone` for _Windows Phone_, `store` for _Windows Store_ and `web` for _ASP.NET_. Please note these values are case sensitive; unmatched values are treated as _ASP.NET_ by Azure. Changing this forces a new resource to be created.
	ApplicationType pulumi.StringOutput `pulumi:"applicationType"`

	// The Instrumentation Key for this Application Insights component.
	InstrumentationKey pulumi.StringOutput `pulumi:"instrumentationKey"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`

	// Specifies the name of the Application Insights component. Changing this forces a
	// new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// The name of the resource group in which to
	// create the Application Insights component.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// Specifies the percentage of the data produced by the monitored application that is sampled for Application Insights telemetry.
	SamplingPercentage pulumi.Float64Output `pulumi:"samplingPercentage"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewInsights registers a new resource with the given unique name, arguments, and options.
func NewInsights(ctx *pulumi.Context,
	name string, args *InsightsArgs, opts ...pulumi.ResourceOption) (*Insights, error) {
	if args == nil || args.ApplicationType == nil {
		return nil, errors.New("missing required argument 'ApplicationType'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.ApplicationType; i != nil { inputs["applicationType"] = i.ToStringOutput() }
		if i := args.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.SamplingPercentage; i != nil { inputs["samplingPercentage"] = i.ToFloat64Output() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Insights
	err := ctx.RegisterResource("azure:appinsights/insights:Insights", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInsights gets an existing Insights resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInsights(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InsightsState, opts ...pulumi.ResourceOption) (*Insights, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AppId; i != nil { inputs["appId"] = i.ToStringOutput() }
		if i := state.ApplicationType; i != nil { inputs["applicationType"] = i.ToStringOutput() }
		if i := state.InstrumentationKey; i != nil { inputs["instrumentationKey"] = i.ToStringOutput() }
		if i := state.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.SamplingPercentage; i != nil { inputs["samplingPercentage"] = i.ToFloat64Output() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
	}
	var resource Insights
	err := ctx.ReadResource("azure:appinsights/insights:Insights", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Insights resources.
type InsightsState struct {
	// The App ID associated with this Application Insights component.
	AppId pulumi.StringInput `pulumi:"appId"`
	// Specifies the type of Application Insights to create. Valid values are `ios` for _iOS_, `java` for _Java web_, `MobileCenter` for _App Center_, `Node.JS` for _Node.js_, `other` for _General_, `phone` for _Windows Phone_, `store` for _Windows Store_ and `web` for _ASP.NET_. Please note these values are case sensitive; unmatched values are treated as _ASP.NET_ by Azure. Changing this forces a new resource to be created.
	ApplicationType pulumi.StringInput `pulumi:"applicationType"`
	// The Instrumentation Key for this Application Insights component.
	InstrumentationKey pulumi.StringInput `pulumi:"instrumentationKey"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the Application Insights component. Changing this forces a
	// new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group in which to
	// create the Application Insights component.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Specifies the percentage of the data produced by the monitored application that is sampled for Application Insights telemetry.
	SamplingPercentage pulumi.Float64Input `pulumi:"samplingPercentage"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

// The set of arguments for constructing a Insights resource.
type InsightsArgs struct {
	// Specifies the type of Application Insights to create. Valid values are `ios` for _iOS_, `java` for _Java web_, `MobileCenter` for _App Center_, `Node.JS` for _Node.js_, `other` for _General_, `phone` for _Windows Phone_, `store` for _Windows Store_ and `web` for _ASP.NET_. Please note these values are case sensitive; unmatched values are treated as _ASP.NET_ by Azure. Changing this forces a new resource to be created.
	ApplicationType pulumi.StringInput `pulumi:"applicationType"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the Application Insights component. Changing this forces a
	// new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group in which to
	// create the Application Insights component.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Specifies the percentage of the data produced by the monitored application that is sampled for Application Insights telemetry.
	SamplingPercentage pulumi.Float64Input `pulumi:"samplingPercentage"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}
