// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cdn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type EndpointGeoFilter struct {
	Action       string   `pulumi:"action"`
	CountryCodes []string `pulumi:"countryCodes"`
	RelativePath string   `pulumi:"relativePath"`
}

type EndpointGeoFilterInput interface {
	pulumi.Input

	ToEndpointGeoFilterOutput() EndpointGeoFilterOutput
	ToEndpointGeoFilterOutputWithContext(context.Context) EndpointGeoFilterOutput
}

type EndpointGeoFilterArgs struct {
	Action       pulumi.StringInput      `pulumi:"action"`
	CountryCodes pulumi.StringArrayInput `pulumi:"countryCodes"`
	RelativePath pulumi.StringInput      `pulumi:"relativePath"`
}

func (EndpointGeoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGeoFilter)(nil)).Elem()
}

func (i EndpointGeoFilterArgs) ToEndpointGeoFilterOutput() EndpointGeoFilterOutput {
	return i.ToEndpointGeoFilterOutputWithContext(context.Background())
}

func (i EndpointGeoFilterArgs) ToEndpointGeoFilterOutputWithContext(ctx context.Context) EndpointGeoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGeoFilterOutput)
}

type EndpointGeoFilterArrayInput interface {
	pulumi.Input

	ToEndpointGeoFilterArrayOutput() EndpointGeoFilterArrayOutput
	ToEndpointGeoFilterArrayOutputWithContext(context.Context) EndpointGeoFilterArrayOutput
}

type EndpointGeoFilterArray []EndpointGeoFilterInput

func (EndpointGeoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGeoFilter)(nil)).Elem()
}

func (i EndpointGeoFilterArray) ToEndpointGeoFilterArrayOutput() EndpointGeoFilterArrayOutput {
	return i.ToEndpointGeoFilterArrayOutputWithContext(context.Background())
}

func (i EndpointGeoFilterArray) ToEndpointGeoFilterArrayOutputWithContext(ctx context.Context) EndpointGeoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointGeoFilterArrayOutput)
}

type EndpointGeoFilterOutput struct{ *pulumi.OutputState }

func (EndpointGeoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGeoFilter)(nil)).Elem()
}

func (o EndpointGeoFilterOutput) ToEndpointGeoFilterOutput() EndpointGeoFilterOutput {
	return o
}

func (o EndpointGeoFilterOutput) ToEndpointGeoFilterOutputWithContext(ctx context.Context) EndpointGeoFilterOutput {
	return o
}

func (o EndpointGeoFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGeoFilter) string { return v.Action }).(pulumi.StringOutput)
}

func (o EndpointGeoFilterOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointGeoFilter) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

func (o EndpointGeoFilterOutput) RelativePath() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointGeoFilter) string { return v.RelativePath }).(pulumi.StringOutput)
}

type EndpointGeoFilterArrayOutput struct{ *pulumi.OutputState }

func (EndpointGeoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointGeoFilter)(nil)).Elem()
}

func (o EndpointGeoFilterArrayOutput) ToEndpointGeoFilterArrayOutput() EndpointGeoFilterArrayOutput {
	return o
}

func (o EndpointGeoFilterArrayOutput) ToEndpointGeoFilterArrayOutputWithContext(ctx context.Context) EndpointGeoFilterArrayOutput {
	return o
}

func (o EndpointGeoFilterArrayOutput) Index(i pulumi.IntInput) EndpointGeoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointGeoFilter {
		return vs[0].([]EndpointGeoFilter)[vs[1].(int)]
	}).(EndpointGeoFilterOutput)
}

type EndpointOrigin struct {
	HostName  string `pulumi:"hostName"`
	HttpPort  *int   `pulumi:"httpPort"`
	HttpsPort *int   `pulumi:"httpsPort"`
	// Specifies the name of the CDN Endpoint. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

type EndpointOriginInput interface {
	pulumi.Input

	ToEndpointOriginOutput() EndpointOriginOutput
	ToEndpointOriginOutputWithContext(context.Context) EndpointOriginOutput
}

type EndpointOriginArgs struct {
	HostName  pulumi.StringInput `pulumi:"hostName"`
	HttpPort  pulumi.IntPtrInput `pulumi:"httpPort"`
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Specifies the name of the CDN Endpoint. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (EndpointOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointOrigin)(nil)).Elem()
}

func (i EndpointOriginArgs) ToEndpointOriginOutput() EndpointOriginOutput {
	return i.ToEndpointOriginOutputWithContext(context.Background())
}

func (i EndpointOriginArgs) ToEndpointOriginOutputWithContext(ctx context.Context) EndpointOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointOriginOutput)
}

type EndpointOriginArrayInput interface {
	pulumi.Input

	ToEndpointOriginArrayOutput() EndpointOriginArrayOutput
	ToEndpointOriginArrayOutputWithContext(context.Context) EndpointOriginArrayOutput
}

type EndpointOriginArray []EndpointOriginInput

func (EndpointOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointOrigin)(nil)).Elem()
}

func (i EndpointOriginArray) ToEndpointOriginArrayOutput() EndpointOriginArrayOutput {
	return i.ToEndpointOriginArrayOutputWithContext(context.Background())
}

func (i EndpointOriginArray) ToEndpointOriginArrayOutputWithContext(ctx context.Context) EndpointOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointOriginArrayOutput)
}

type EndpointOriginOutput struct{ *pulumi.OutputState }

func (EndpointOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointOrigin)(nil)).Elem()
}

func (o EndpointOriginOutput) ToEndpointOriginOutput() EndpointOriginOutput {
	return o
}

func (o EndpointOriginOutput) ToEndpointOriginOutputWithContext(ctx context.Context) EndpointOriginOutput {
	return o
}

func (o EndpointOriginOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointOrigin) string { return v.HostName }).(pulumi.StringOutput)
}

func (o EndpointOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

func (o EndpointOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Specifies the name of the CDN Endpoint. Changing this forces a new resource to be created.
func (o EndpointOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointOrigin) string { return v.Name }).(pulumi.StringOutput)
}

type EndpointOriginArrayOutput struct{ *pulumi.OutputState }

func (EndpointOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointOrigin)(nil)).Elem()
}

func (o EndpointOriginArrayOutput) ToEndpointOriginArrayOutput() EndpointOriginArrayOutput {
	return o
}

func (o EndpointOriginArrayOutput) ToEndpointOriginArrayOutputWithContext(ctx context.Context) EndpointOriginArrayOutput {
	return o
}

func (o EndpointOriginArrayOutput) Index(i pulumi.IntInput) EndpointOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointOrigin {
		return vs[0].([]EndpointOrigin)[vs[1].(int)]
	}).(EndpointOriginOutput)
}

func init() {
	pulumi.RegisterOutputType(EndpointGeoFilterOutput{})
	pulumi.RegisterOutputType(EndpointGeoFilterArrayOutput{})
	pulumi.RegisterOutputType(EndpointOriginOutput{})
	pulumi.RegisterOutputType(EndpointOriginArrayOutput{})
}
