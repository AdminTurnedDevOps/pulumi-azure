// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package healthcare

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing Healthcare Service
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/healthcare_service.html.markdown.
func LookupService(ctx *pulumi.Context, args *GetServiceArgs, opts ...pulumi.InvokeOption) (*GetServiceResult, error) {
	var rv GetServiceResult
	err := ctx.Invoke("azure:healthcare/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type GetServiceArgs struct {
	Location string `pulumi:"location"`
	// Specifies the name of the Healthcare Service.
	Name string `pulumi:"name"`
	// The name of the Resource Group in which the Healthcare Service exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	Tags *map[string]string `pulumi:"tags"`
}

// A collection of values returned by getService.
type GetServiceResult struct {
	AccessPolicyObjectIds []string `pulumi:"accessPolicyObjectIds"`
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfigurations []GetServiceAuthenticationConfigurationsResult `pulumi:"authenticationConfigurations"`
	// A `corsConfiguration` block as defined below.
	CorsConfigurations []GetServiceCorsConfigurationsResult `pulumi:"corsConfigurations"`
	CosmosdbThroughput int `pulumi:"cosmosdbThroughput"`
	// The type of the service.
	Kind string `pulumi:"kind"`
	// The Azure Region where the Service is located.
	Location string `pulumi:"location"`
	Name string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}
type GetServiceAuthenticationConfigurationsResult struct {
	// The intended audience to receive authentication tokens for the service. 
	Audience string `pulumi:"audience"`
	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service. 
	Authority string `pulumi:"authority"`
	// Is the 'SMART on FHIR' option for mobile and web implementations enbled?
	SmartProxyEnabled bool `pulumi:"smartProxyEnabled"`
}
type GetServiceCorsConfigurationsResult struct {
	// Are credentials are allowed via CORS?
	AllowCredentials bool `pulumi:"allowCredentials"`
	// The set of headers to be allowed via CORS.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// The set of origins to be allowed via CORS.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}
