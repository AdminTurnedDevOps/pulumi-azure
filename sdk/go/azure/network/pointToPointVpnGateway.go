// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Point-to-Site VPN Gateway.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/point_to_site_vpn_gateway.html.markdown.
type PointToPointVpnGateway struct {
	s *pulumi.ResourceState
}

// NewPointToPointVpnGateway registers a new resource with the given unique name, arguments, and options.
func NewPointToPointVpnGateway(ctx *pulumi.Context,
	name string, args *PointToPointVpnGatewayArgs, opts ...pulumi.ResourceOpt) (*PointToPointVpnGateway, error) {
	if args == nil || args.ConnectionConfiguration == nil {
		return nil, errors.New("missing required argument 'ConnectionConfiguration'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ScaleUnit == nil {
		return nil, errors.New("missing required argument 'ScaleUnit'")
	}
	if args == nil || args.VirtualHubId == nil {
		return nil, errors.New("missing required argument 'VirtualHubId'")
	}
	if args == nil || args.VpnServerConfigurationId == nil {
		return nil, errors.New("missing required argument 'VpnServerConfigurationId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["connectionConfiguration"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["scaleUnit"] = nil
		inputs["tags"] = nil
		inputs["virtualHubId"] = nil
		inputs["vpnServerConfigurationId"] = nil
	} else {
		inputs["connectionConfiguration"] = args.ConnectionConfiguration
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["scaleUnit"] = args.ScaleUnit
		inputs["tags"] = args.Tags
		inputs["virtualHubId"] = args.VirtualHubId
		inputs["vpnServerConfigurationId"] = args.VpnServerConfigurationId
	}
	s, err := ctx.RegisterResource("azure:network/pointToPointVpnGateway:PointToPointVpnGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PointToPointVpnGateway{s: s}, nil
}

// GetPointToPointVpnGateway gets an existing PointToPointVpnGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPointToPointVpnGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PointToPointVpnGatewayState, opts ...pulumi.ResourceOpt) (*PointToPointVpnGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["connectionConfiguration"] = state.ConnectionConfiguration
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["scaleUnit"] = state.ScaleUnit
		inputs["tags"] = state.Tags
		inputs["virtualHubId"] = state.VirtualHubId
		inputs["vpnServerConfigurationId"] = state.VpnServerConfigurationId
	}
	s, err := ctx.ReadResource("azure:network/pointToPointVpnGateway:PointToPointVpnGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PointToPointVpnGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *PointToPointVpnGateway) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *PointToPointVpnGateway) ID() pulumi.IDOutput {
	return r.s.ID()
}

// A `connectionConfiguration` block as defined below.
func (r *PointToPointVpnGateway) ConnectionConfiguration() pulumi.Output {
	return r.s.State["connectionConfiguration"]
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (r *PointToPointVpnGateway) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// Specifies the name of the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
func (r *PointToPointVpnGateway) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The name of the resource group in which to create the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
func (r *PointToPointVpnGateway) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// The Scale Unit for this Point-to-Site VPN Gateway.
func (r *PointToPointVpnGateway) ScaleUnit() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["scaleUnit"])
}

// A mapping of tags to assign to the Point-to-Site VPN Gateway.
func (r *PointToPointVpnGateway) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// The ID of the Virtual Hub where this Point-to-Site VPN Gateway should exist. Changing this forces a new resource to be created.
func (r *PointToPointVpnGateway) VirtualHubId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["virtualHubId"])
}

// The ID of the VPN Server Configuration which this Point-to-Site VPN Gateway should use. Changing this forces a new resource to be created. 
func (r *PointToPointVpnGateway) VpnServerConfigurationId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpnServerConfigurationId"])
}

// Input properties used for looking up and filtering PointToPointVpnGateway resources.
type PointToPointVpnGatewayState struct {
	// A `connectionConfiguration` block as defined below.
	ConnectionConfiguration interface{}
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the resource group in which to create the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The Scale Unit for this Point-to-Site VPN Gateway.
	ScaleUnit interface{}
	// A mapping of tags to assign to the Point-to-Site VPN Gateway.
	Tags interface{}
	// The ID of the Virtual Hub where this Point-to-Site VPN Gateway should exist. Changing this forces a new resource to be created.
	VirtualHubId interface{}
	// The ID of the VPN Server Configuration which this Point-to-Site VPN Gateway should use. Changing this forces a new resource to be created. 
	VpnServerConfigurationId interface{}
}

// The set of arguments for constructing a PointToPointVpnGateway resource.
type PointToPointVpnGatewayArgs struct {
	// A `connectionConfiguration` block as defined below.
	ConnectionConfiguration interface{}
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the resource group in which to create the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The Scale Unit for this Point-to-Site VPN Gateway.
	ScaleUnit interface{}
	// A mapping of tags to assign to the Point-to-Site VPN Gateway.
	Tags interface{}
	// The ID of the Virtual Hub where this Point-to-Site VPN Gateway should exist. Changing this forces a new resource to be created.
	VirtualHubId interface{}
	// The ID of the VPN Server Configuration which this Point-to-Site VPN Gateway should use. Changing this forces a new resource to be created. 
	VpnServerConfigurationId interface{}
}
