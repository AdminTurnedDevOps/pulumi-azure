// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Associates a Network Security Group with a Subnet within a Virtual Network.
// 
// > **NOTE:** Subnet `<->` Network Security Group associations currently need to be configured on both this resource and using the `networkSecurityGroupId` field on the `network.Subnet` resource. The next major version of the AzureRM Provider (2.0) will remove the `networkSecurityGroupId` field from the `network.Subnet` resource such that this resource is used to link resources in future.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/subnet_network_security_group_association.html.markdown.
type SubnetNetworkSecurityGroupAssociation struct {
	pulumi.CustomResourceState

	// The ID of the Network Security Group which should be associated with the Subnet. Changing this forces a new resource to be created.
	NetworkSecurityGroupId pulumi.StringOutput `pulumi:"networkSecurityGroupId"`

	// The ID of the Subnet. Changing this forces a new resource to be created.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
}

// NewSubnetNetworkSecurityGroupAssociation registers a new resource with the given unique name, arguments, and options.
func NewSubnetNetworkSecurityGroupAssociation(ctx *pulumi.Context,
	name string, args *SubnetNetworkSecurityGroupAssociationArgs, opts ...pulumi.ResourceOption) (*SubnetNetworkSecurityGroupAssociation, error) {
	if args == nil || args.NetworkSecurityGroupId == nil {
		return nil, errors.New("missing required argument 'NetworkSecurityGroupId'")
	}
	if args == nil || args.SubnetId == nil {
		return nil, errors.New("missing required argument 'SubnetId'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.NetworkSecurityGroupId; i != nil { inputs["networkSecurityGroupId"] = i.ToStringOutput() }
		if i := args.SubnetId; i != nil { inputs["subnetId"] = i.ToStringOutput() }
	}
	var resource SubnetNetworkSecurityGroupAssociation
	err := ctx.RegisterResource("azure:network/subnetNetworkSecurityGroupAssociation:SubnetNetworkSecurityGroupAssociation", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubnetNetworkSecurityGroupAssociation gets an existing SubnetNetworkSecurityGroupAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubnetNetworkSecurityGroupAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubnetNetworkSecurityGroupAssociationState, opts ...pulumi.ResourceOption) (*SubnetNetworkSecurityGroupAssociation, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.NetworkSecurityGroupId; i != nil { inputs["networkSecurityGroupId"] = i.ToStringOutput() }
		if i := state.SubnetId; i != nil { inputs["subnetId"] = i.ToStringOutput() }
	}
	var resource SubnetNetworkSecurityGroupAssociation
	err := ctx.ReadResource("azure:network/subnetNetworkSecurityGroupAssociation:SubnetNetworkSecurityGroupAssociation", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubnetNetworkSecurityGroupAssociation resources.
type SubnetNetworkSecurityGroupAssociationState struct {
	// The ID of the Network Security Group which should be associated with the Subnet. Changing this forces a new resource to be created.
	NetworkSecurityGroupId pulumi.StringInput `pulumi:"networkSecurityGroupId"`
	// The ID of the Subnet. Changing this forces a new resource to be created.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

// The set of arguments for constructing a SubnetNetworkSecurityGroupAssociation resource.
type SubnetNetworkSecurityGroupAssociationArgs struct {
	// The ID of the Network Security Group which should be associated with the Subnet. Changing this forces a new resource to be created.
	NetworkSecurityGroupId pulumi.StringInput `pulumi:"networkSecurityGroupId"`
	// The ID of the Subnet. Changing this forces a new resource to be created.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}
