// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a VPN Server Configuration.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/vpn_server_configuration.html.markdown.
type VpnServerConfiguration struct {
	s *pulumi.ResourceState
}

// NewVpnServerConfiguration registers a new resource with the given unique name, arguments, and options.
func NewVpnServerConfiguration(ctx *pulumi.Context,
	name string, args *VpnServerConfigurationArgs, opts ...pulumi.ResourceOpt) (*VpnServerConfiguration, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.VpnAuthenticationTypes == nil {
		return nil, errors.New("missing required argument 'VpnAuthenticationTypes'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["azureActiveDirectoryAuthentications"] = nil
		inputs["clientRevokedCertificates"] = nil
		inputs["clientRootCertificates"] = nil
		inputs["ipsecPolicy"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["radiusServer"] = nil
		inputs["resourceGroupName"] = nil
		inputs["tags"] = nil
		inputs["vpnAuthenticationTypes"] = nil
		inputs["vpnProtocols"] = nil
	} else {
		inputs["azureActiveDirectoryAuthentications"] = args.AzureActiveDirectoryAuthentications
		inputs["clientRevokedCertificates"] = args.ClientRevokedCertificates
		inputs["clientRootCertificates"] = args.ClientRootCertificates
		inputs["ipsecPolicy"] = args.IpsecPolicy
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["radiusServer"] = args.RadiusServer
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
		inputs["vpnAuthenticationTypes"] = args.VpnAuthenticationTypes
		inputs["vpnProtocols"] = args.VpnProtocols
	}
	s, err := ctx.RegisterResource("azure:network/vpnServerConfiguration:VpnServerConfiguration", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnServerConfiguration{s: s}, nil
}

// GetVpnServerConfiguration gets an existing VpnServerConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnServerConfiguration(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpnServerConfigurationState, opts ...pulumi.ResourceOpt) (*VpnServerConfiguration, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["azureActiveDirectoryAuthentications"] = state.AzureActiveDirectoryAuthentications
		inputs["clientRevokedCertificates"] = state.ClientRevokedCertificates
		inputs["clientRootCertificates"] = state.ClientRootCertificates
		inputs["ipsecPolicy"] = state.IpsecPolicy
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["radiusServer"] = state.RadiusServer
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["tags"] = state.Tags
		inputs["vpnAuthenticationTypes"] = state.VpnAuthenticationTypes
		inputs["vpnProtocols"] = state.VpnProtocols
	}
	s, err := ctx.ReadResource("azure:network/vpnServerConfiguration:VpnServerConfiguration", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnServerConfiguration{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VpnServerConfiguration) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VpnServerConfiguration) ID() pulumi.IDOutput {
	return r.s.ID()
}

// A `azureActiveDirectoryAuthentication` block as defined below.
func (r *VpnServerConfiguration) AzureActiveDirectoryAuthentications() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["azureActiveDirectoryAuthentications"])
}

// One or more `clientRevokedCertificate` blocks as defined below.
func (r *VpnServerConfiguration) ClientRevokedCertificates() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["clientRevokedCertificates"])
}

// One or more `clientRootCertificate` blocks as defined below.
func (r *VpnServerConfiguration) ClientRootCertificates() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["clientRootCertificates"])
}

// A `ipsecPolicy` block as defined below.
func (r *VpnServerConfiguration) IpsecPolicy() pulumi.Output {
	return r.s.State["ipsecPolicy"]
}

// The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
func (r *VpnServerConfiguration) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
func (r *VpnServerConfiguration) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// A `radiusServer` block as defined below.
func (r *VpnServerConfiguration) RadiusServer() pulumi.Output {
	return r.s.State["radiusServer"]
}

// The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
func (r *VpnServerConfiguration) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// A mapping of tags to assign to the resource.
func (r *VpnServerConfiguration) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
func (r *VpnServerConfiguration) VpnAuthenticationTypes() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpnAuthenticationTypes"])
}

// A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.
func (r *VpnServerConfiguration) VpnProtocols() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["vpnProtocols"])
}

// Input properties used for looking up and filtering VpnServerConfiguration resources.
type VpnServerConfigurationState struct {
	// A `azureActiveDirectoryAuthentication` block as defined below.
	AzureActiveDirectoryAuthentications interface{}
	// One or more `clientRevokedCertificate` blocks as defined below.
	ClientRevokedCertificates interface{}
	// One or more `clientRootCertificate` blocks as defined below.
	ClientRootCertificates interface{}
	// A `ipsecPolicy` block as defined below.
	IpsecPolicy interface{}
	// The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
	Name interface{}
	// A `radiusServer` block as defined below.
	RadiusServer interface{}
	// The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
	VpnAuthenticationTypes interface{}
	// A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.
	VpnProtocols interface{}
}

// The set of arguments for constructing a VpnServerConfiguration resource.
type VpnServerConfigurationArgs struct {
	// A `azureActiveDirectoryAuthentication` block as defined below.
	AzureActiveDirectoryAuthentications interface{}
	// One or more `clientRevokedCertificate` blocks as defined below.
	ClientRevokedCertificates interface{}
	// One or more `clientRootCertificate` blocks as defined below.
	ClientRootCertificates interface{}
	// A `ipsecPolicy` block as defined below.
	IpsecPolicy interface{}
	// The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
	Name interface{}
	// A `radiusServer` block as defined below.
	RadiusServer interface{}
	// The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
	VpnAuthenticationTypes interface{}
	// A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.
	VpnProtocols interface{}
}
