// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Virtual Hub within a Virtual WAN.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/virtual_hub.html.markdown.
type VirtualHub struct {
	s *pulumi.ResourceState
}

// NewVirtualHub registers a new resource with the given unique name, arguments, and options.
func NewVirtualHub(ctx *pulumi.Context,
	name string, args *VirtualHubArgs, opts ...pulumi.ResourceOpt) (*VirtualHub, error) {
	if args == nil || args.AddressPrefix == nil {
		return nil, errors.New("missing required argument 'AddressPrefix'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.VirtualWanId == nil {
		return nil, errors.New("missing required argument 'VirtualWanId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["addressPrefix"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["routes"] = nil
		inputs["tags"] = nil
		inputs["virtualWanId"] = nil
	} else {
		inputs["addressPrefix"] = args.AddressPrefix
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["routes"] = args.Routes
		inputs["tags"] = args.Tags
		inputs["virtualWanId"] = args.VirtualWanId
	}
	s, err := ctx.RegisterResource("azure:network/virtualHub:VirtualHub", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VirtualHub{s: s}, nil
}

// GetVirtualHub gets an existing VirtualHub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualHub(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VirtualHubState, opts ...pulumi.ResourceOpt) (*VirtualHub, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["addressPrefix"] = state.AddressPrefix
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["routes"] = state.Routes
		inputs["tags"] = state.Tags
		inputs["virtualWanId"] = state.VirtualWanId
	}
	s, err := ctx.ReadResource("azure:network/virtualHub:VirtualHub", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VirtualHub{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VirtualHub) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VirtualHub) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Address Prefix which should be used for this Virtual Hub.
func (r *VirtualHub) AddressPrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["addressPrefix"])
}

// Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
func (r *VirtualHub) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The name of the Virtual Hub. Changing this forces a new resource to be created.
func (r *VirtualHub) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
func (r *VirtualHub) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// One or more `route` blocks as defined below.
func (r *VirtualHub) Routes() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["routes"])
}

// A mapping of tags to assign to the Virtual Hub.
func (r *VirtualHub) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// The ID of a Virtual WAN within which the Virtual Hub should be created.
func (r *VirtualHub) VirtualWanId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["virtualWanId"])
}

// Input properties used for looking up and filtering VirtualHub resources.
type VirtualHubState struct {
	// The Address Prefix which should be used for this Virtual Hub.
	AddressPrefix interface{}
	// Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the Virtual Hub. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// One or more `route` blocks as defined below.
	Routes interface{}
	// A mapping of tags to assign to the Virtual Hub.
	Tags interface{}
	// The ID of a Virtual WAN within which the Virtual Hub should be created.
	VirtualWanId interface{}
}

// The set of arguments for constructing a VirtualHub resource.
type VirtualHubArgs struct {
	// The Address Prefix which should be used for this Virtual Hub.
	AddressPrefix interface{}
	// Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the Virtual Hub. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// One or more `route` blocks as defined below.
	Routes interface{}
	// A mapping of tags to assign to the Virtual Hub.
	Tags interface{}
	// The ID of a Virtual WAN within which the Virtual Hub should be created.
	VirtualWanId interface{}
}
