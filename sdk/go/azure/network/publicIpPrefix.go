// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Public IP Prefix.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/public_ip_prefix.html.markdown.
type PublicIpPrefix struct {
	pulumi.CustomResourceState

	// The IP address prefix value that was allocated.
	IpPrefix pulumi.StringOutput `pulumi:"ipPrefix"`

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`

	// Specifies the name of the Public IP resource . Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// Specifies the number of bits of the prefix. The value can be set between 24 (256 addresses) and 31 (2 addresses). Changing this forces a new resource to be created.
	PrefixLength pulumi.IntOutput `pulumi:"prefixLength"`

	// The name of the resource group in which to create the public IP.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// The SKU of the Public IP Prefix. Accepted values are `Standard`. Defaults to `Standard`. Changing this forces a new resource to be created.
	Sku pulumi.StringOutput `pulumi:"sku"`

	// A mapping of tags to assign to the resource.
	Tags pulumi.MapOutput `pulumi:"tags"`

	// A collection containing the availability zone to allocate the Public IP in.
	Zones pulumi.StringOutput `pulumi:"zones"`
}

// NewPublicIpPrefix registers a new resource with the given unique name, arguments, and options.
func NewPublicIpPrefix(ctx *pulumi.Context,
	name string, args *PublicIpPrefixArgs, opts ...pulumi.ResourceOption) (*PublicIpPrefix, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.PrefixLength; i != nil { inputs["prefixLength"] = i.ToIntOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.Sku; i != nil { inputs["sku"] = i.ToStringOutput() }
		if i := args.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
		if i := args.Zones; i != nil { inputs["zones"] = i.ToStringOutput() }
	}
	var resource PublicIpPrefix
	err := ctx.RegisterResource("azure:network/publicIpPrefix:PublicIpPrefix", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicIpPrefix gets an existing PublicIpPrefix resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicIpPrefix(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicIpPrefixState, opts ...pulumi.ResourceOption) (*PublicIpPrefix, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.IpPrefix; i != nil { inputs["ipPrefix"] = i.ToStringOutput() }
		if i := state.Location; i != nil { inputs["location"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.PrefixLength; i != nil { inputs["prefixLength"] = i.ToIntOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.Sku; i != nil { inputs["sku"] = i.ToStringOutput() }
		if i := state.Tags; i != nil { inputs["tags"] = i.ToMapOutput() }
		if i := state.Zones; i != nil { inputs["zones"] = i.ToStringOutput() }
	}
	var resource PublicIpPrefix
	err := ctx.ReadResource("azure:network/publicIpPrefix:PublicIpPrefix", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicIpPrefix resources.
type PublicIpPrefixState struct {
	// The IP address prefix value that was allocated.
	IpPrefix pulumi.StringInput `pulumi:"ipPrefix"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the Public IP resource . Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the number of bits of the prefix. The value can be set between 24 (256 addresses) and 31 (2 addresses). Changing this forces a new resource to be created.
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// The name of the resource group in which to create the public IP.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The SKU of the Public IP Prefix. Accepted values are `Standard`. Defaults to `Standard`. Changing this forces a new resource to be created.
	Sku pulumi.StringInput `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// A collection containing the availability zone to allocate the Public IP in.
	Zones pulumi.StringInput `pulumi:"zones"`
}

// The set of arguments for constructing a PublicIpPrefix resource.
type PublicIpPrefixArgs struct {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the Public IP resource . Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the number of bits of the prefix. The value can be set between 24 (256 addresses) and 31 (2 addresses). Changing this forces a new resource to be created.
	PrefixLength pulumi.IntInput `pulumi:"prefixLength"`
	// The name of the resource group in which to create the public IP.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The SKU of the Public IP Prefix. Accepted values are `Standard`. Defaults to `Standard`. Changing this forces a new resource to be created.
	Sku pulumi.StringInput `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// A collection containing the availability zone to allocate the Public IP in.
	Zones pulumi.StringInput `pulumi:"zones"`
}
