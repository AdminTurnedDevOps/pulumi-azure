// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a VPN Gateway within a Virtual Hub, which enables Site-to-Site communication.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/vpn_gateway.html.markdown.
type VpnGateway struct {
	s *pulumi.ResourceState
}

// NewVpnGateway registers a new resource with the given unique name, arguments, and options.
func NewVpnGateway(ctx *pulumi.Context,
	name string, args *VpnGatewayArgs, opts ...pulumi.ResourceOpt) (*VpnGateway, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.VirtualHubId == nil {
		return nil, errors.New("missing required argument 'VirtualHubId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bgpSettings"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["scaleUnit"] = nil
		inputs["tags"] = nil
		inputs["virtualHubId"] = nil
	} else {
		inputs["bgpSettings"] = args.BgpSettings
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["scaleUnit"] = args.ScaleUnit
		inputs["tags"] = args.Tags
		inputs["virtualHubId"] = args.VirtualHubId
	}
	s, err := ctx.RegisterResource("azure:network/vpnGateway:VpnGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnGateway{s: s}, nil
}

// GetVpnGateway gets an existing VpnGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpnGatewayState, opts ...pulumi.ResourceOpt) (*VpnGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bgpSettings"] = state.BgpSettings
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["scaleUnit"] = state.ScaleUnit
		inputs["tags"] = state.Tags
		inputs["virtualHubId"] = state.VirtualHubId
	}
	s, err := ctx.ReadResource("azure:network/vpnGateway:VpnGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpnGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VpnGateway) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VpnGateway) ID() pulumi.IDOutput {
	return r.s.ID()
}

// A `bgpSettings` block as defined below.
func (r *VpnGateway) BgpSettings() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["bgpSettings"])
}

// The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
func (r *VpnGateway) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The Name which should be used for this VPN Gateway. Changing this forces a new resource to be created.
func (r *VpnGateway) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The Name of the Resource Group in which this VPN Gateway should be created. Changing this forces a new resource to be created.
func (r *VpnGateway) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// The Scale Unit for this VPN Gateway. Defaults to `1`.
func (r *VpnGateway) ScaleUnit() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["scaleUnit"])
}

// A mapping of tags to assign to the VPN Gateway.
func (r *VpnGateway) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// The ID of the Virtual Hub within which this VPN Gateway should be created. Changing this forces a new resource to be created.
func (r *VpnGateway) VirtualHubId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["virtualHubId"])
}

// Input properties used for looking up and filtering VpnGateway resources.
type VpnGatewayState struct {
	// A `bgpSettings` block as defined below.
	BgpSettings interface{}
	// The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The Name which should be used for this VPN Gateway. Changing this forces a new resource to be created.
	Name interface{}
	// The Name of the Resource Group in which this VPN Gateway should be created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The Scale Unit for this VPN Gateway. Defaults to `1`.
	ScaleUnit interface{}
	// A mapping of tags to assign to the VPN Gateway.
	Tags interface{}
	// The ID of the Virtual Hub within which this VPN Gateway should be created. Changing this forces a new resource to be created.
	VirtualHubId interface{}
}

// The set of arguments for constructing a VpnGateway resource.
type VpnGatewayArgs struct {
	// A `bgpSettings` block as defined below.
	BgpSettings interface{}
	// The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The Name which should be used for this VPN Gateway. Changing this forces a new resource to be created.
	Name interface{}
	// The Name of the Resource Group in which this VPN Gateway should be created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The Scale Unit for this VPN Gateway. Defaults to `1`.
	ScaleUnit interface{}
	// A mapping of tags to assign to the VPN Gateway.
	Tags interface{}
	// The ID of the Virtual Hub within which this VPN Gateway should be created. Changing this forces a new resource to be created.
	VirtualHubId interface{}
}
