// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package network

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Azure NAT Gateway.
// 
// > **NOTE:** The Azure NAT Gateway service is currently in private preview. Your subscription must be on the NAT Gateway private preview whitelist for this resource to be provisioned correctly. If you attempt to provision this resource and receive an `InvalidResourceType` error may mean that your subscription is not part of the NAT Gateway private preview or you are using a region which does not yet support the NAT Gateway private preview service. The NAT Gateway private preview service is currently available in a limited set of regions. Private preview resources may have multiple breaking changes over their lifecycle until they GA. You can opt into the Private Preview by contacting your Microsoft Representative.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/nat_gateway.html.markdown.
type NatGateway struct {
	s *pulumi.ResourceState
}

// NewNatGateway registers a new resource with the given unique name, arguments, and options.
func NewNatGateway(ctx *pulumi.Context,
	name string, args *NatGatewayArgs, opts ...pulumi.ResourceOpt) (*NatGateway, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["idleTimeoutInMinutes"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["publicIpAddressIds"] = nil
		inputs["publicIpPrefixIds"] = nil
		inputs["resourceGroupName"] = nil
		inputs["skuName"] = nil
		inputs["tags"] = nil
		inputs["zones"] = nil
	} else {
		inputs["idleTimeoutInMinutes"] = args.IdleTimeoutInMinutes
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["publicIpAddressIds"] = args.PublicIpAddressIds
		inputs["publicIpPrefixIds"] = args.PublicIpPrefixIds
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["skuName"] = args.SkuName
		inputs["tags"] = args.Tags
		inputs["zones"] = args.Zones
	}
	inputs["resourceGuid"] = nil
	s, err := ctx.RegisterResource("azure:network/natGateway:NatGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NatGateway{s: s}, nil
}

// GetNatGateway gets an existing NatGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNatGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NatGatewayState, opts ...pulumi.ResourceOpt) (*NatGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["idleTimeoutInMinutes"] = state.IdleTimeoutInMinutes
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["publicIpAddressIds"] = state.PublicIpAddressIds
		inputs["publicIpPrefixIds"] = state.PublicIpPrefixIds
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["resourceGuid"] = state.ResourceGuid
		inputs["skuName"] = state.SkuName
		inputs["tags"] = state.Tags
		inputs["zones"] = state.Zones
	}
	s, err := ctx.ReadResource("azure:network/natGateway:NatGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NatGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NatGateway) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NatGateway) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The idle timeout which should be used in minutes. Defaults to `4`.
func (r *NatGateway) IdleTimeoutInMinutes() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["idleTimeoutInMinutes"])
}

// Specifies the supported Azure location where the NAT Gateway should exist. Changing this forces a new resource to be created.
func (r *NatGateway) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// Specifies the name of the NAT Gateway. Changing this forces a new resource to be created.
func (r *NatGateway) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// A list of Public IP Address ID's which should be associated with the NAT Gateway resource.
func (r *NatGateway) PublicIpAddressIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["publicIpAddressIds"])
}

// A list of Public IP Prefix ID's which should be associated with the NAT Gateway resource.
func (r *NatGateway) PublicIpPrefixIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["publicIpPrefixIds"])
}

// Specifies the name of the Resource Group in which the NAT Gateway should exist. Changing this forces a new resource to be created.
func (r *NatGateway) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// The resource GUID property of the NAT Gateway.
func (r *NatGateway) ResourceGuid() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGuid"])
}

// The SKU which should be used. At this time the only supported value is `Standard`. Defaults to `Standard`.
func (r *NatGateway) SkuName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["skuName"])
}

// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
func (r *NatGateway) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// A list of availability zones where the NAT Gateway should be provisioned. Changing this forces a new resource to be created.
func (r *NatGateway) Zones() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["zones"])
}

// Input properties used for looking up and filtering NatGateway resources.
type NatGatewayState struct {
	// The idle timeout which should be used in minutes. Defaults to `4`.
	IdleTimeoutInMinutes interface{}
	// Specifies the supported Azure location where the NAT Gateway should exist. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the NAT Gateway. Changing this forces a new resource to be created.
	Name interface{}
	// A list of Public IP Address ID's which should be associated with the NAT Gateway resource.
	PublicIpAddressIds interface{}
	// A list of Public IP Prefix ID's which should be associated with the NAT Gateway resource.
	PublicIpPrefixIds interface{}
	// Specifies the name of the Resource Group in which the NAT Gateway should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The resource GUID property of the NAT Gateway.
	ResourceGuid interface{}
	// The SKU which should be used. At this time the only supported value is `Standard`. Defaults to `Standard`.
	SkuName interface{}
	// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
	Tags interface{}
	// A list of availability zones where the NAT Gateway should be provisioned. Changing this forces a new resource to be created.
	Zones interface{}
}

// The set of arguments for constructing a NatGateway resource.
type NatGatewayArgs struct {
	// The idle timeout which should be used in minutes. Defaults to `4`.
	IdleTimeoutInMinutes interface{}
	// Specifies the supported Azure location where the NAT Gateway should exist. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the NAT Gateway. Changing this forces a new resource to be created.
	Name interface{}
	// A list of Public IP Address ID's which should be associated with the NAT Gateway resource.
	PublicIpAddressIds interface{}
	// A list of Public IP Prefix ID's which should be associated with the NAT Gateway resource.
	PublicIpPrefixIds interface{}
	// Specifies the name of the Resource Group in which the NAT Gateway should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The SKU which should be used. At this time the only supported value is `Standard`. Defaults to `Standard`.
	SkuName interface{}
	// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
	Tags interface{}
	// A list of availability zones where the NAT Gateway should be provisioned. Changing this forces a new resource to be created.
	Zones interface{}
}
