// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages the Pricing Tier for Azure Security Center in the current subscription.
// 
// > **NOTE:** This resource requires the `Owner` permission on the Subscription.
// 
// > **NOTE:** Deletion of this resource does not change or reset the pricing tier to `Free`
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/security_center_subscription_pricing.html.markdown.
type SubscriptionPricing struct {
	pulumi.CustomResourceState

	// The pricing tier to use. Possible values are `Free` and `Standard`.
	Tier pulumi.StringOutput `pulumi:"tier"`
}

// NewSubscriptionPricing registers a new resource with the given unique name, arguments, and options.
func NewSubscriptionPricing(ctx *pulumi.Context,
	name string, args *SubscriptionPricingArgs, opts ...pulumi.ResourceOption) (*SubscriptionPricing, error) {
	if args == nil || args.Tier == nil {
		return nil, errors.New("missing required argument 'Tier'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Tier; i != nil { inputs["tier"] = i.ToStringOutput() }
	}
	var resource SubscriptionPricing
	err := ctx.RegisterResource("azure:securitycenter/subscriptionPricing:SubscriptionPricing", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscriptionPricing gets an existing SubscriptionPricing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscriptionPricing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriptionPricingState, opts ...pulumi.ResourceOption) (*SubscriptionPricing, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Tier; i != nil { inputs["tier"] = i.ToStringOutput() }
	}
	var resource SubscriptionPricing
	err := ctx.ReadResource("azure:securitycenter/subscriptionPricing:SubscriptionPricing", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubscriptionPricing resources.
type SubscriptionPricingState struct {
	// The pricing tier to use. Possible values are `Free` and `Standard`.
	Tier pulumi.StringInput `pulumi:"tier"`
}

// The set of arguments for constructing a SubscriptionPricing resource.
type SubscriptionPricingArgs struct {
	// The pricing tier to use. Possible values are `Free` and `Standard`.
	Tier pulumi.StringInput `pulumi:"tier"`
}
