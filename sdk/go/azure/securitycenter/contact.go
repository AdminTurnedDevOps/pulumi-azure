// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages the subscription's Security Center Contact.
// 
// > **NOTE:** Owner access permission is required. 
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/security_center_contact.html.markdown.
type Contact struct {
	pulumi.CustomResourceState

	// Whether to send security alerts notifications to the security contact.
	AlertNotifications pulumi.BoolOutput `pulumi:"alertNotifications"`

	// Whether to send security alerts notifications to subscription admins.
	AlertsToAdmins pulumi.BoolOutput `pulumi:"alertsToAdmins"`

	// The email of the Security Center Contact.
	Email pulumi.StringOutput `pulumi:"email"`

	// The phone number of the Security Center Contact.
	Phone pulumi.StringOutput `pulumi:"phone"`
}

// NewContact registers a new resource with the given unique name, arguments, and options.
func NewContact(ctx *pulumi.Context,
	name string, args *ContactArgs, opts ...pulumi.ResourceOption) (*Contact, error) {
	if args == nil || args.AlertNotifications == nil {
		return nil, errors.New("missing required argument 'AlertNotifications'")
	}
	if args == nil || args.AlertsToAdmins == nil {
		return nil, errors.New("missing required argument 'AlertsToAdmins'")
	}
	if args == nil || args.Email == nil {
		return nil, errors.New("missing required argument 'Email'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.AlertNotifications; i != nil { inputs["alertNotifications"] = i.ToBoolOutput() }
		if i := args.AlertsToAdmins; i != nil { inputs["alertsToAdmins"] = i.ToBoolOutput() }
		if i := args.Email; i != nil { inputs["email"] = i.ToStringOutput() }
		if i := args.Phone; i != nil { inputs["phone"] = i.ToStringOutput() }
	}
	var resource Contact
	err := ctx.RegisterResource("azure:securitycenter/contact:Contact", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContact gets an existing Contact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContactState, opts ...pulumi.ResourceOption) (*Contact, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AlertNotifications; i != nil { inputs["alertNotifications"] = i.ToBoolOutput() }
		if i := state.AlertsToAdmins; i != nil { inputs["alertsToAdmins"] = i.ToBoolOutput() }
		if i := state.Email; i != nil { inputs["email"] = i.ToStringOutput() }
		if i := state.Phone; i != nil { inputs["phone"] = i.ToStringOutput() }
	}
	var resource Contact
	err := ctx.ReadResource("azure:securitycenter/contact:Contact", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Contact resources.
type ContactState struct {
	// Whether to send security alerts notifications to the security contact.
	AlertNotifications pulumi.BoolInput `pulumi:"alertNotifications"`
	// Whether to send security alerts notifications to subscription admins.
	AlertsToAdmins pulumi.BoolInput `pulumi:"alertsToAdmins"`
	// The email of the Security Center Contact.
	Email pulumi.StringInput `pulumi:"email"`
	// The phone number of the Security Center Contact.
	Phone pulumi.StringInput `pulumi:"phone"`
}

// The set of arguments for constructing a Contact resource.
type ContactArgs struct {
	// Whether to send security alerts notifications to the security contact.
	AlertNotifications pulumi.BoolInput `pulumi:"alertNotifications"`
	// Whether to send security alerts notifications to subscription admins.
	AlertsToAdmins pulumi.BoolInput `pulumi:"alertsToAdmins"`
	// The email of the Security Center Contact.
	Email pulumi.StringInput `pulumi:"email"`
	// The phone number of the Security Center Contact.
	Phone pulumi.StringInput `pulumi:"phone"`
}
