// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datafactory

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Linked Service (connection) between MySQL and Azure Data Factory.
// 
// > **Note:** All arguments including the connectionString will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/data_factory_linked_service_mysql.html.markdown.
type LinkedServiceMysql struct {
	pulumi.CustomResourceState

	// A map of additional properties to associate with the Data Factory Linked Service MySQL.
	AdditionalProperties pulumi.StringMapOutput `pulumi:"additionalProperties"`

	// List of tags that can be used for describing the Data Factory Linked Service MySQL.
	Annotations pulumi.StringArrayOutput `pulumi:"annotations"`

	// The connection string in which to authenticate with MySQL.
	ConnectionString pulumi.StringOutput `pulumi:"connectionString"`

	// The Data Factory name in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryName pulumi.StringOutput `pulumi:"dataFactoryName"`

	// The description for the Data Factory Linked Service MySQL.
	Description pulumi.StringOutput `pulumi:"description"`

	// The integration runtime reference to associate with the Data Factory Linked Service MySQL.
	IntegrationRuntimeName pulumi.StringOutput `pulumi:"integrationRuntimeName"`

	// Specifies the name of the Data Factory Linked Service MySQL. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringOutput `pulumi:"name"`

	// A map of parameters to associate with the Data Factory Linked Service MySQL.
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`

	// The name of the resource group in which to create the Data Factory Linked Service MySQL. Changing this forces a new resource
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewLinkedServiceMysql registers a new resource with the given unique name, arguments, and options.
func NewLinkedServiceMysql(ctx *pulumi.Context,
	name string, args *LinkedServiceMysqlArgs, opts ...pulumi.ResourceOption) (*LinkedServiceMysql, error) {
	if args == nil || args.ConnectionString == nil {
		return nil, errors.New("missing required argument 'ConnectionString'")
	}
	if args == nil || args.DataFactoryName == nil {
		return nil, errors.New("missing required argument 'DataFactoryName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.AdditionalProperties; i != nil { inputs["additionalProperties"] = i.ToStringMapOutput() }
		if i := args.Annotations; i != nil { inputs["annotations"] = i.ToStringArrayOutput() }
		if i := args.ConnectionString; i != nil { inputs["connectionString"] = i.ToStringOutput() }
		if i := args.DataFactoryName; i != nil { inputs["dataFactoryName"] = i.ToStringOutput() }
		if i := args.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := args.IntegrationRuntimeName; i != nil { inputs["integrationRuntimeName"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Parameters; i != nil { inputs["parameters"] = i.ToStringMapOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
	}
	var resource LinkedServiceMysql
	err := ctx.RegisterResource("azure:datafactory/linkedServiceMysql:LinkedServiceMysql", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLinkedServiceMysql gets an existing LinkedServiceMysql resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLinkedServiceMysql(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LinkedServiceMysqlState, opts ...pulumi.ResourceOption) (*LinkedServiceMysql, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AdditionalProperties; i != nil { inputs["additionalProperties"] = i.ToStringMapOutput() }
		if i := state.Annotations; i != nil { inputs["annotations"] = i.ToStringArrayOutput() }
		if i := state.ConnectionString; i != nil { inputs["connectionString"] = i.ToStringOutput() }
		if i := state.DataFactoryName; i != nil { inputs["dataFactoryName"] = i.ToStringOutput() }
		if i := state.Description; i != nil { inputs["description"] = i.ToStringOutput() }
		if i := state.IntegrationRuntimeName; i != nil { inputs["integrationRuntimeName"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Parameters; i != nil { inputs["parameters"] = i.ToStringMapOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
	}
	var resource LinkedServiceMysql
	err := ctx.ReadResource("azure:datafactory/linkedServiceMysql:LinkedServiceMysql", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LinkedServiceMysql resources.
type LinkedServiceMysqlState struct {
	// A map of additional properties to associate with the Data Factory Linked Service MySQL.
	AdditionalProperties pulumi.StringMapInput `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Linked Service MySQL.
	Annotations pulumi.StringArrayInput `pulumi:"annotations"`
	// The connection string in which to authenticate with MySQL.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The Data Factory name in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryName pulumi.StringInput `pulumi:"dataFactoryName"`
	// The description for the Data Factory Linked Service MySQL.
	Description pulumi.StringInput `pulumi:"description"`
	// The integration runtime reference to associate with the Data Factory Linked Service MySQL.
	IntegrationRuntimeName pulumi.StringInput `pulumi:"integrationRuntimeName"`
	// Specifies the name of the Data Factory Linked Service MySQL. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service MySQL.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The name of the resource group in which to create the Data Factory Linked Service MySQL. Changing this forces a new resource
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a LinkedServiceMysql resource.
type LinkedServiceMysqlArgs struct {
	// A map of additional properties to associate with the Data Factory Linked Service MySQL.
	AdditionalProperties pulumi.StringMapInput `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Linked Service MySQL.
	Annotations pulumi.StringArrayInput `pulumi:"annotations"`
	// The connection string in which to authenticate with MySQL.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The Data Factory name in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryName pulumi.StringInput `pulumi:"dataFactoryName"`
	// The description for the Data Factory Linked Service MySQL.
	Description pulumi.StringInput `pulumi:"description"`
	// The integration runtime reference to associate with the Data Factory Linked Service MySQL.
	IntegrationRuntimeName pulumi.StringInput `pulumi:"integrationRuntimeName"`
	// Specifies the name of the Data Factory Linked Service MySQL. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringInput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Linked Service MySQL.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The name of the resource group in which to create the Data Factory Linked Service MySQL. Changing this forces a new resource
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}
