// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package managementgroups

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Management Group.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/management_group_legacy.html.markdown.
type ManagementGroup struct {
	pulumi.CustomResourceState

	// A friendly name for this Management Group. If not specified, this'll be the same as the `groupId`.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`

	// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
	GroupId pulumi.StringOutput `pulumi:"groupId"`

	// The ID of the Parent Management Group. Changing this forces a new resource to be created.
	ParentManagementGroupId pulumi.StringOutput `pulumi:"parentManagementGroupId"`

	// A list of Subscription GUIDs which should be assigned to the Management Group.
	SubscriptionIds pulumi.StringArrayOutput `pulumi:"subscriptionIds"`
}

// NewManagementGroup registers a new resource with the given unique name, arguments, and options.
func NewManagementGroup(ctx *pulumi.Context,
	name string, args *ManagementGroupArgs, opts ...pulumi.ResourceOption) (*ManagementGroup, error) {
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.DisplayName; i != nil { inputs["displayName"] = i.ToStringOutput() }
		if i := args.GroupId; i != nil { inputs["groupId"] = i.ToStringOutput() }
		if i := args.ParentManagementGroupId; i != nil { inputs["parentManagementGroupId"] = i.ToStringOutput() }
		if i := args.SubscriptionIds; i != nil { inputs["subscriptionIds"] = i.ToStringArrayOutput() }
	}
	var resource ManagementGroup
	err := ctx.RegisterResource("azure:managementgroups/managementGroup:ManagementGroup", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagementGroup gets an existing ManagementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagementGroupState, opts ...pulumi.ResourceOption) (*ManagementGroup, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.DisplayName; i != nil { inputs["displayName"] = i.ToStringOutput() }
		if i := state.GroupId; i != nil { inputs["groupId"] = i.ToStringOutput() }
		if i := state.ParentManagementGroupId; i != nil { inputs["parentManagementGroupId"] = i.ToStringOutput() }
		if i := state.SubscriptionIds; i != nil { inputs["subscriptionIds"] = i.ToStringArrayOutput() }
	}
	var resource ManagementGroup
	err := ctx.ReadResource("azure:managementgroups/managementGroup:ManagementGroup", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagementGroup resources.
type ManagementGroupState struct {
	// A friendly name for this Management Group. If not specified, this'll be the same as the `groupId`.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Parent Management Group. Changing this forces a new resource to be created.
	ParentManagementGroupId pulumi.StringInput `pulumi:"parentManagementGroupId"`
	// A list of Subscription GUIDs which should be assigned to the Management Group.
	SubscriptionIds pulumi.StringArrayInput `pulumi:"subscriptionIds"`
}

// The set of arguments for constructing a ManagementGroup resource.
type ManagementGroupArgs struct {
	// A friendly name for this Management Group. If not specified, this'll be the same as the `groupId`.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Parent Management Group. Changing this forces a new resource to be created.
	ParentManagementGroupId pulumi.StringInput `pulumi:"parentManagementGroupId"`
	// A list of Subscription GUIDs which should be assigned to the Management Group.
	SubscriptionIds pulumi.StringArrayInput `pulumi:"subscriptionIds"`
}
