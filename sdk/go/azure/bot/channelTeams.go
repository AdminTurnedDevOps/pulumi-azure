// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bot

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a MS Teams integration for a Bot Channel
// 
// > **Note** A bot can only have a single MS Teams Channel associated with it.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/bot_channel_ms_teams.html.markdown.
type ChannelTeams struct {
	s *pulumi.ResourceState
}

// NewChannelTeams registers a new resource with the given unique name, arguments, and options.
func NewChannelTeams(ctx *pulumi.Context,
	name string, args *ChannelTeamsArgs, opts ...pulumi.ResourceOpt) (*ChannelTeams, error) {
	if args == nil || args.BotName == nil {
		return nil, errors.New("missing required argument 'BotName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["botName"] = nil
		inputs["callingWebHook"] = nil
		inputs["enableCalling"] = nil
		inputs["location"] = nil
		inputs["resourceGroupName"] = nil
	} else {
		inputs["botName"] = args.BotName
		inputs["callingWebHook"] = args.CallingWebHook
		inputs["enableCalling"] = args.EnableCalling
		inputs["location"] = args.Location
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	s, err := ctx.RegisterResource("azure:bot/channelTeams:ChannelTeams", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ChannelTeams{s: s}, nil
}

// GetChannelTeams gets an existing ChannelTeams resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetChannelTeams(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ChannelTeamsState, opts ...pulumi.ResourceOpt) (*ChannelTeams, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["botName"] = state.BotName
		inputs["callingWebHook"] = state.CallingWebHook
		inputs["enableCalling"] = state.EnableCalling
		inputs["location"] = state.Location
		inputs["resourceGroupName"] = state.ResourceGroupName
	}
	s, err := ctx.ReadResource("azure:bot/channelTeams:ChannelTeams", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ChannelTeams{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ChannelTeams) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ChannelTeams) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
func (r *ChannelTeams) BotName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["botName"])
}

// Specifies the webhook for Microsoft Teams channel calls.
func (r *ChannelTeams) CallingWebHook() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["callingWebHook"])
}

// Specifies whether to enable Microsoft Teams channel calls. This defaults to `false`.
func (r *ChannelTeams) EnableCalling() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["enableCalling"])
}

// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (r *ChannelTeams) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
func (r *ChannelTeams) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// Input properties used for looking up and filtering ChannelTeams resources.
type ChannelTeamsState struct {
	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName interface{}
	// Specifies the webhook for Microsoft Teams channel calls.
	CallingWebHook interface{}
	// Specifies whether to enable Microsoft Teams channel calls. This defaults to `false`.
	EnableCalling interface{}
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}

// The set of arguments for constructing a ChannelTeams resource.
type ChannelTeamsArgs struct {
	// The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
	BotName interface{}
	// Specifies the webhook for Microsoft Teams channel calls.
	CallingWebHook interface{}
	// Specifies whether to enable Microsoft Teams channel calls. This defaults to `false`.
	EnableCalling interface{}
	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
}
