// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package streamanalytics

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Stream Analytics Output to Microsoft SQL Server Database.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/stream_analytics_output_mssql.html.markdown.
type OutputMssql struct {
	pulumi.CustomResourceState

	Database pulumi.StringOutput `pulumi:"database"`

	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password pulumi.StringOutput `pulumi:"password"`

	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`

	// The SQL server url. Changing this forces a new resource to be created.
	Server pulumi.StringOutput `pulumi:"server"`

	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringOutput `pulumi:"streamAnalyticsJobName"`

	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table pulumi.StringOutput `pulumi:"table"`

	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User pulumi.StringOutput `pulumi:"user"`
}

// NewOutputMssql registers a new resource with the given unique name, arguments, and options.
func NewOutputMssql(ctx *pulumi.Context,
	name string, args *OutputMssqlArgs, opts ...pulumi.ResourceOption) (*OutputMssql, error) {
	if args == nil || args.Database == nil {
		return nil, errors.New("missing required argument 'Database'")
	}
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Server == nil {
		return nil, errors.New("missing required argument 'Server'")
	}
	if args == nil || args.StreamAnalyticsJobName == nil {
		return nil, errors.New("missing required argument 'StreamAnalyticsJobName'")
	}
	if args == nil || args.Table == nil {
		return nil, errors.New("missing required argument 'Table'")
	}
	if args == nil || args.User == nil {
		return nil, errors.New("missing required argument 'User'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.Database; i != nil { inputs["database"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Password; i != nil { inputs["password"] = i.ToStringOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := args.Server; i != nil { inputs["server"] = i.ToStringOutput() }
		if i := args.StreamAnalyticsJobName; i != nil { inputs["streamAnalyticsJobName"] = i.ToStringOutput() }
		if i := args.Table; i != nil { inputs["table"] = i.ToStringOutput() }
		if i := args.User; i != nil { inputs["user"] = i.ToStringOutput() }
	}
	var resource OutputMssql
	err := ctx.RegisterResource("azure:streamanalytics/outputMssql:OutputMssql", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutputMssql gets an existing OutputMssql resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutputMssql(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutputMssqlState, opts ...pulumi.ResourceOption) (*OutputMssql, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.Database; i != nil { inputs["database"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Password; i != nil { inputs["password"] = i.ToStringOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
		if i := state.Server; i != nil { inputs["server"] = i.ToStringOutput() }
		if i := state.StreamAnalyticsJobName; i != nil { inputs["streamAnalyticsJobName"] = i.ToStringOutput() }
		if i := state.Table; i != nil { inputs["table"] = i.ToStringOutput() }
		if i := state.User; i != nil { inputs["user"] = i.ToStringOutput() }
	}
	var resource OutputMssql
	err := ctx.ReadResource("azure:streamanalytics/outputMssql:OutputMssql", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutputMssql resources.
type OutputMssqlState struct {
	Database pulumi.StringInput `pulumi:"database"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The SQL server url. Changing this forces a new resource to be created.
	Server pulumi.StringInput `pulumi:"server"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringInput `pulumi:"streamAnalyticsJobName"`
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table pulumi.StringInput `pulumi:"table"`
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User pulumi.StringInput `pulumi:"user"`
}

// The set of arguments for constructing a OutputMssql resource.
type OutputMssqlArgs struct {
	Database pulumi.StringInput `pulumi:"database"`
	// The name of the Stream Output. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Password used together with username, to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	Password pulumi.StringInput `pulumi:"password"`
	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The SQL server url. Changing this forces a new resource to be created.
	Server pulumi.StringInput `pulumi:"server"`
	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	StreamAnalyticsJobName pulumi.StringInput `pulumi:"streamAnalyticsJobName"`
	// Table in the database that the output points to. Changing this forces a new resource to be created.
	Table pulumi.StringInput `pulumi:"table"`
	// Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created.
	User pulumi.StringInput `pulumi:"user"`
}
