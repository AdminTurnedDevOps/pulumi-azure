// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lb

import (
	"context"
	"reflect"
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Load Balancer Outbound Rule.
// 
// > **NOTE** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration and a Backend Address Pool Attached.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/lb_outbound_rule.html.markdown.
type OutboundRule struct {
	pulumi.CustomResourceState

	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntOutput `pulumi:"allocatedOutboundPorts"`

	// The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPoolId pulumi.StringOutput `pulumi:"backendAddressPoolId"`

	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolOutput `pulumi:"enableTcpReset"`

	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations OutboundRuleFrontendIpConfigurationsArrayOutput `pulumi:"frontendIpConfigurations"`

	// The timeout for the TCP idle connection
	IdleTimeoutInMinutes pulumi.IntOutput `pulumi:"idleTimeoutInMinutes"`

	// The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
	LoadbalancerId pulumi.StringOutput `pulumi:"loadbalancerId"`

	// Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`

	// The transport protocol for the external endpoint. Possible values are `Udp`, `Tcp` or `All`.
	Protocol pulumi.StringOutput `pulumi:"protocol"`

	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewOutboundRule registers a new resource with the given unique name, arguments, and options.
func NewOutboundRule(ctx *pulumi.Context,
	name string, args *OutboundRuleArgs, opts ...pulumi.ResourceOption) (*OutboundRule, error) {
	if args == nil || args.BackendAddressPoolId == nil {
		return nil, errors.New("missing required argument 'BackendAddressPoolId'")
	}
	if args == nil || args.LoadbalancerId == nil {
		return nil, errors.New("missing required argument 'LoadbalancerId'")
	}
	if args == nil || args.Protocol == nil {
		return nil, errors.New("missing required argument 'Protocol'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := map[string]pulumi.Input{}
	if args != nil {
		if i := args.AllocatedOutboundPorts; i != nil { inputs["allocatedOutboundPorts"] = i.ToIntOutput() }
		if i := args.BackendAddressPoolId; i != nil { inputs["backendAddressPoolId"] = i.ToStringOutput() }
		if i := args.EnableTcpReset; i != nil { inputs["enableTcpReset"] = i.ToBoolOutput() }
		if i := args.FrontendIpConfigurations; i != nil { inputs["frontendIpConfigurations"] = i.ToOutboundRuleFrontendIpConfigurationsArrayOutput() }
		if i := args.IdleTimeoutInMinutes; i != nil { inputs["idleTimeoutInMinutes"] = i.ToIntOutput() }
		if i := args.LoadbalancerId; i != nil { inputs["loadbalancerId"] = i.ToStringOutput() }
		if i := args.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := args.Protocol; i != nil { inputs["protocol"] = i.ToStringOutput() }
		if i := args.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
	}
	var resource OutboundRule
	err := ctx.RegisterResource("azure:lb/outboundRule:OutboundRule", name, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOutboundRule gets an existing OutboundRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOutboundRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OutboundRuleState, opts ...pulumi.ResourceOption) (*OutboundRule, error) {
	inputs := map[string]pulumi.Input{}
	if state != nil {
		if i := state.AllocatedOutboundPorts; i != nil { inputs["allocatedOutboundPorts"] = i.ToIntOutput() }
		if i := state.BackendAddressPoolId; i != nil { inputs["backendAddressPoolId"] = i.ToStringOutput() }
		if i := state.EnableTcpReset; i != nil { inputs["enableTcpReset"] = i.ToBoolOutput() }
		if i := state.FrontendIpConfigurations; i != nil { inputs["frontendIpConfigurations"] = i.ToOutboundRuleFrontendIpConfigurationsArrayOutput() }
		if i := state.IdleTimeoutInMinutes; i != nil { inputs["idleTimeoutInMinutes"] = i.ToIntOutput() }
		if i := state.LoadbalancerId; i != nil { inputs["loadbalancerId"] = i.ToStringOutput() }
		if i := state.Name; i != nil { inputs["name"] = i.ToStringOutput() }
		if i := state.Protocol; i != nil { inputs["protocol"] = i.ToStringOutput() }
		if i := state.ResourceGroupName; i != nil { inputs["resourceGroupName"] = i.ToStringOutput() }
	}
	var resource OutboundRule
	err := ctx.ReadResource("azure:lb/outboundRule:OutboundRule", name, id, inputs, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OutboundRule resources.
type OutboundRuleState struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntInput `pulumi:"allocatedOutboundPorts"`
	// The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPoolId pulumi.StringInput `pulumi:"backendAddressPoolId"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolInput `pulumi:"enableTcpReset"`
	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations OutboundRuleFrontendIpConfigurationsArrayInput `pulumi:"frontendIpConfigurations"`
	// The timeout for the TCP idle connection
	IdleTimeoutInMinutes pulumi.IntInput `pulumi:"idleTimeoutInMinutes"`
	// The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
	LoadbalancerId pulumi.StringInput `pulumi:"loadbalancerId"`
	// Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The transport protocol for the external endpoint. Possible values are `Udp`, `Tcp` or `All`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a OutboundRule resource.
type OutboundRuleArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntInput `pulumi:"allocatedOutboundPorts"`
	// The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPoolId pulumi.StringInput `pulumi:"backendAddressPoolId"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolInput `pulumi:"enableTcpReset"`
	// One or more `frontendIpConfiguration` blocks as defined below.
	FrontendIpConfigurations OutboundRuleFrontendIpConfigurationsArrayInput `pulumi:"frontendIpConfigurations"`
	// The timeout for the TCP idle connection
	IdleTimeoutInMinutes pulumi.IntInput `pulumi:"idleTimeoutInMinutes"`
	// The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
	LoadbalancerId pulumi.StringInput `pulumi:"loadbalancerId"`
	// Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The transport protocol for the external endpoint. Possible values are `Udp`, `Tcp` or `All`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}
type OutboundRuleFrontendIpConfigurations struct {
	// The ID of the Load Balancer Outbound Rule.
	Id *string `pulumi:"id"`
	// Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}
var outboundRuleFrontendIpConfigurationsType = reflect.TypeOf((*OutboundRuleFrontendIpConfigurations)(nil)).Elem()

type OutboundRuleFrontendIpConfigurationsInput interface {
	pulumi.Input

	ToOutboundRuleFrontendIpConfigurationsOutput() OutboundRuleFrontendIpConfigurationsOutput
	ToOutboundRuleFrontendIpConfigurationsOutputWithContext(ctx context.Context) OutboundRuleFrontendIpConfigurationsOutput
}

type OutboundRuleFrontendIpConfigurationsArgs struct {
	// The ID of the Load Balancer Outbound Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OutboundRuleFrontendIpConfigurationsArgs) ElementType() reflect.Type {
	return outboundRuleFrontendIpConfigurationsType
}

func (a OutboundRuleFrontendIpConfigurationsArgs) ToOutboundRuleFrontendIpConfigurationsOutput() OutboundRuleFrontendIpConfigurationsOutput {
	return pulumi.ToOutput(a).(OutboundRuleFrontendIpConfigurationsOutput)
}

func (a OutboundRuleFrontendIpConfigurationsArgs) ToOutboundRuleFrontendIpConfigurationsOutputWithContext(ctx context.Context) OutboundRuleFrontendIpConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, a).(OutboundRuleFrontendIpConfigurationsOutput)
}

type OutboundRuleFrontendIpConfigurationsOutput struct { *pulumi.OutputState }

// The ID of the Load Balancer Outbound Rule.
func (o OutboundRuleFrontendIpConfigurationsOutput) Id() pulumi.StringOutput {
	return o.Apply(func(v OutboundRuleFrontendIpConfigurations) string {
		if v.Id == nil { return *new(string) } else { return *v.Id }
	}).(pulumi.StringOutput)
}

// Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
func (o OutboundRuleFrontendIpConfigurationsOutput) Name() pulumi.StringOutput {
	return o.Apply(func(v OutboundRuleFrontendIpConfigurations) string {
		return v.Name
	}).(pulumi.StringOutput)
}

func (OutboundRuleFrontendIpConfigurationsOutput) ElementType() reflect.Type {
	return outboundRuleFrontendIpConfigurationsType
}

func (o OutboundRuleFrontendIpConfigurationsOutput) ToOutboundRuleFrontendIpConfigurationsOutput() OutboundRuleFrontendIpConfigurationsOutput {
	return o
}

func (o OutboundRuleFrontendIpConfigurationsOutput) ToOutboundRuleFrontendIpConfigurationsOutputWithContext(ctx context.Context) OutboundRuleFrontendIpConfigurationsOutput {
	return o
}

func init() { pulumi.RegisterOutputType(OutboundRuleFrontendIpConfigurationsOutput{}) }

var outboundRuleFrontendIpConfigurationsArrayType = reflect.TypeOf((*[]OutboundRuleFrontendIpConfigurations)(nil)).Elem()

type OutboundRuleFrontendIpConfigurationsArrayInput interface {
	pulumi.Input

	ToOutboundRuleFrontendIpConfigurationsArrayOutput() OutboundRuleFrontendIpConfigurationsArrayOutput
	ToOutboundRuleFrontendIpConfigurationsArrayOutputWithContext(ctx context.Context) OutboundRuleFrontendIpConfigurationsArrayOutput
}

type OutboundRuleFrontendIpConfigurationsArrayArgs []OutboundRuleFrontendIpConfigurationsInput

func (OutboundRuleFrontendIpConfigurationsArrayArgs) ElementType() reflect.Type {
	return outboundRuleFrontendIpConfigurationsArrayType
}

func (a OutboundRuleFrontendIpConfigurationsArrayArgs) ToOutboundRuleFrontendIpConfigurationsArrayOutput() OutboundRuleFrontendIpConfigurationsArrayOutput {
	return pulumi.ToOutput(a).(OutboundRuleFrontendIpConfigurationsArrayOutput)
}

func (a OutboundRuleFrontendIpConfigurationsArrayArgs) ToOutboundRuleFrontendIpConfigurationsArrayOutputWithContext(ctx context.Context) OutboundRuleFrontendIpConfigurationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, a).(OutboundRuleFrontendIpConfigurationsArrayOutput)
}

type OutboundRuleFrontendIpConfigurationsArrayOutput struct { *pulumi.OutputState }

func (o OutboundRuleFrontendIpConfigurationsArrayOutput) Index(i pulumi.IntInput) OutboundRuleFrontendIpConfigurationsOutput {
	return pulumi.All(o, i).Apply(func(vs []interface{}) OutboundRuleFrontendIpConfigurations {
		return vs[0].([]OutboundRuleFrontendIpConfigurations)[vs[1].(int)]
	}).(OutboundRuleFrontendIpConfigurationsOutput)
}

func (OutboundRuleFrontendIpConfigurationsArrayOutput) ElementType() reflect.Type {
	return outboundRuleFrontendIpConfigurationsArrayType
}

func (o OutboundRuleFrontendIpConfigurationsArrayOutput) ToOutboundRuleFrontendIpConfigurationsArrayOutput() OutboundRuleFrontendIpConfigurationsArrayOutput {
	return o
}

func (o OutboundRuleFrontendIpConfigurationsArrayOutput) ToOutboundRuleFrontendIpConfigurationsArrayOutputWithContext(ctx context.Context) OutboundRuleFrontendIpConfigurationsArrayOutput {
	return o
}

func init() { pulumi.RegisterOutputType(OutboundRuleFrontendIpConfigurationsArrayOutput{}) }

